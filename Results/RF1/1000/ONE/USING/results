3(2023-09-01T12:04:35.759001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('iow', 'ujx', 'wuf' , {'3':toTimestamp(now())}) USING TIMESTAMP 4;
1(2023-09-01T12:04:35.755000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zqy', 'fgn', 'wvj' , {'1':toTimestamp(now())}) USING TIMESTAMP 2;
0(2023-09-01T12:04:35.754000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cmd', 'xlp', 'kfi' , {'0':toTimestamp(now())}) USING TIMESTAMP 1;
4(2023-09-01T12:04:35.760000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nlt', 'vlf', 'orl' , {'4':toTimestamp(now())}) USING TIMESTAMP 5;
5(2023-09-01T12:04:35.757001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uty', 'qnj', 'pvm' , {'5':toTimestamp(now())}) USING TIMESTAMP 6;
7(2023-09-01T12:04:35.763001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bmj', 'cgs', 'wnv' , {'7':toTimestamp(now())}) USING TIMESTAMP 8;
2(2023-09-01T12:04:35.755000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ihl', 'tkf', 'sqn' , {'2':toTimestamp(now())}) USING TIMESTAMP 3;
6(2023-09-01T12:04:35.763000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zlv', 'wbo', 'zwk' , {'6':toTimestamp(now())}) USING TIMESTAMP 7;
8(2023-09-01T12:04:35.760001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ond', 'hux', 'lqu' , {'8':toTimestamp(now())}) USING TIMESTAMP 9;
11(2023-09-01T12:04:35.777000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qfp', 'xlk', 'jha' , {'11':toTimestamp(now())}) USING TIMESTAMP 12;
10(2023-09-01T12:04:35.774000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fnu', 'whp', 'hqu' , {'10':toTimestamp(now())}) USING TIMESTAMP 11;
9(2023-09-01T12:04:35.776000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('scx', 'htw', 'mrv' , {'9':toTimestamp(now())}) USING TIMESTAMP 10;
14(2023-09-01T12:04:35.780000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mzc', 'oqv', 'odl' , {'14':toTimestamp(now())}) USING TIMESTAMP 15;
15(2023-09-01T12:04:35.787000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ptl', 'wwv', 'vno' , {'15':toTimestamp(now())}) USING TIMESTAMP 16;
16(2023-09-01T12:04:35.789000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lwq', 'ypj', 'vnb' , {'16':toTimestamp(now())}) USING TIMESTAMP 17;
13(2023-09-01T12:04:35.783001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vzi', 'iiz', 'cbo' , {'13':toTimestamp(now())}) USING TIMESTAMP 14;
12(2023-09-01T12:04:35.779000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('imu', 'bne', 'fzt' , {'12':toTimestamp(now())}) USING TIMESTAMP 13;
18(2023-09-01T12:04:35.790001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ibp', 'pef', 'jzg' , {'18':toTimestamp(now())}) USING TIMESTAMP 19;
19(2023-09-01T12:04:35.797000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('scn', 'lci', 'kgh' , {'19':toTimestamp(now())}) USING TIMESTAMP 20;
17(2023-09-01T12:04:35.794000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ybu', 'gfb', 'biv' , {'17':toTimestamp(now())}) USING TIMESTAMP 18;
21(2023-09-01T12:04:35.797000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ltl', 'biz', 'gse' , {'21':toTimestamp(now())}) USING TIMESTAMP 22;
20(2023-09-01T12:04:35.801000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('shf', 'ack', 'uoz' , {'20':toTimestamp(now())}) USING TIMESTAMP 21;
22(2023-09-01T12:04:35.806000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('aor', 'vke', 'qnc' , {'22':toTimestamp(now())}) USING TIMESTAMP 23;
24(2023-09-01T12:04:35.809000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cxy', 'vmb', 'toh' , {'24':toTimestamp(now())}) USING TIMESTAMP 25;
26(2023-09-01T12:04:35.805001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bjj', 'kuo', 'shx' , {'26':toTimestamp(now())}) USING TIMESTAMP 27;
23(2023-09-01T12:04:35.807000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rib', 'xte', 'xtm' , {'23':toTimestamp(now())}) USING TIMESTAMP 24;
25(2023-09-01T12:04:35.808000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yzn', 'ewy', 'mgf' , {'25':toTimestamp(now())}) USING TIMESTAMP 26;
28(2023-09-01T12:04:35.811001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('gbv', 'bye', 'ztx' , {'28':toTimestamp(now())}) USING TIMESTAMP 29;
27(2023-09-01T12:04:35.810001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mik', 'ojw', 'osk' , {'27':toTimestamp(now())}) USING TIMESTAMP 28;
34(2023-09-01T12:04:35.821000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hlg', 'wpp', 'ojk' , {'34':toTimestamp(now())}) USING TIMESTAMP 35;
32(2023-09-01T12:04:35.820000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vbk', 'mbv', 'iat' , {'32':toTimestamp(now())}) USING TIMESTAMP 33;
31(2023-09-01T12:04:35.818001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('chb', 'nlf', 'wlj' , {'31':toTimestamp(now())}) USING TIMESTAMP 32;
30(2023-09-01T12:04:35.818000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fsk', 'yae', 'bll' , {'30':toTimestamp(now())}) USING TIMESTAMP 31;
29(2023-09-01T12:04:35.817000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mya', 'cgr', 'bap' , {'29':toTimestamp(now())}) USING TIMESTAMP 30;
33(2023-09-01T12:04:35.824000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ijb', 'zry', 'kom' , {'33':toTimestamp(now())}) USING TIMESTAMP 34;
35(2023-09-01T12:04:35.828000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ygg', 'gay', 'qzq' , {'35':toTimestamp(now())}) USING TIMESTAMP 36;
36(2023-09-01T12:04:35.828000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wpt', 'mvh', 'luh' , {'36':toTimestamp(now())}) USING TIMESTAMP 37;
37(2023-09-01T12:04:35.831000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hzs', 'cjh', 'gvn' , {'37':toTimestamp(now())}) USING TIMESTAMP 38;
38(2023-09-01T12:04:35.834000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ewh', 'qbp', 'xiy' , {'38':toTimestamp(now())}) USING TIMESTAMP 39;
40(2023-09-01T12:04:35.842000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qfn', 'dec', 'ydi' , {'40':toTimestamp(now())}) USING TIMESTAMP 41;
43(2023-09-01T12:04:35.844000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wrt', 'ohc', 'fvv' , {'43':toTimestamp(now())}) USING TIMESTAMP 44;
45(2023-09-01T12:04:35.845000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fld', 'ffh', 'ggs' , {'45':toTimestamp(now())}) USING TIMESTAMP 46;
41(2023-09-01T12:04:35.841000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dww', 'tdj', 'ruh' , {'41':toTimestamp(now())}) USING TIMESTAMP 42;
42(2023-09-01T12:04:35.841001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lgc', 'psp', 'wwm' , {'42':toTimestamp(now())}) USING TIMESTAMP 43;
39(2023-09-01T12:04:35.835000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rdc', 'fyv', 'qww' , {'39':toTimestamp(now())}) USING TIMESTAMP 40;
46(2023-09-01T12:04:35.849000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('emx', 'huk', 'yax' , {'46':toTimestamp(now())}) USING TIMESTAMP 47;
44(2023-09-01T12:04:35.846000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lrm', 'msm', 'sbd' , {'44':toTimestamp(now())}) USING TIMESTAMP 45;
47(2023-09-01T12:04:35.850001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('slw', 'pmj', 'cyi' , {'47':toTimestamp(now())}) USING TIMESTAMP 48;
48(2023-09-01T12:04:35.853000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('oal', 'sdv', 'zos' , {'48':toTimestamp(now())}) USING TIMESTAMP 49;
50(2023-09-01T12:04:35.856001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('msy', 'bxy', 'wss' , {'50':toTimestamp(now())}) USING TIMESTAMP 51;
51(2023-09-01T12:04:35.858000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mfi', 'fyf', 'fdc' , {'51':toTimestamp(now())}) USING TIMESTAMP 52;
54(2023-09-01T12:04:35.861000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hei', 'jbt', 'rpr' , {'54':toTimestamp(now())}) USING TIMESTAMP 55;
53(2023-09-01T12:04:35.857000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cbg', 'ttl', 'osm' , {'53':toTimestamp(now())}) USING TIMESTAMP 54;
55(2023-09-01T12:04:35.864000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ipx', 'zlq', 'znk' , {'55':toTimestamp(now())}) USING TIMESTAMP 56;
56(2023-09-01T12:04:35.862000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vwb', 'xra', 'mka' , {'56':toTimestamp(now())}) USING TIMESTAMP 57;
49(2023-09-01T12:04:35.860000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('imj', 'tpu', 'zim' , {'49':toTimestamp(now())}) USING TIMESTAMP 50;
52(2023-09-01T12:04:35.860001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xxz', 'omp', 'vxf' , {'52':toTimestamp(now())}) USING TIMESTAMP 53;
57(2023-09-01T12:04:35.871000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qsu', 'ayx', 'qvk' , {'57':toTimestamp(now())}) USING TIMESTAMP 58;
58(2023-09-01T12:04:35.869001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ete', 'ohb', 'cqn' , {'58':toTimestamp(now())}) USING TIMESTAMP 59;
59(2023-09-01T12:04:35.875000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dlu', 'pxy', 'plb' , {'59':toTimestamp(now())}) USING TIMESTAMP 60;
61(2023-09-01T12:04:35.877001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('aql', 'krv', 'gsk' , {'61':toTimestamp(now())}) USING TIMESTAMP 62;
60(2023-09-01T12:04:35.873000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rtj', 'oeu', 'ykw' , {'60':toTimestamp(now())}) USING TIMESTAMP 61;
62(2023-09-01T12:04:35.880000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('kcf', 'hpi', 'sog' , {'62':toTimestamp(now())}) USING TIMESTAMP 63;
65(2023-09-01T12:04:35.878000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ilb', 'ghe', 'ata' , {'65':toTimestamp(now())}) USING TIMESTAMP 66;
63(2023-09-01T12:04:35.875000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('pmk', 'thw', 'tey' , {'63':toTimestamp(now())}) USING TIMESTAMP 64;
66(2023-09-01T12:04:35.882001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jwn', 'nhy', 'mfs' , {'66':toTimestamp(now())}) USING TIMESTAMP 67;
64(2023-09-01T12:04:35.881000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lqf', 'lwo', 'ivl' , {'64':toTimestamp(now())}) USING TIMESTAMP 65;
68(2023-09-01T12:04:35.886000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('iht', 'rfd', 'lan' , {'68':toTimestamp(now())}) USING TIMESTAMP 69;
67(2023-09-01T12:04:35.882000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yai', 'wgo', 'ybb' , {'67':toTimestamp(now())}) USING TIMESTAMP 68;
71(2023-09-01T12:04:35.890000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yjk', 'bqf', 'zil' , {'71':toTimestamp(now())}) USING TIMESTAMP 72;
69(2023-09-01T12:04:35.886000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vuz', 'ugz', 'zxt' , {'69':toTimestamp(now())}) USING TIMESTAMP 70;
70(2023-09-01T12:04:35.888000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('sui', 'yeh', 'dkg' , {'70':toTimestamp(now())}) USING TIMESTAMP 71;
73(2023-09-01T12:04:35.897001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ywz', 'tkt', 'hcl' , {'73':toTimestamp(now())}) USING TIMESTAMP 74;
75(2023-09-01T12:04:35.898001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wxx', 'kpr', 'sip' , {'75':toTimestamp(now())}) USING TIMESTAMP 76;
74(2023-09-01T12:04:35.897001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fcv', 'jro', 'yaf' , {'74':toTimestamp(now())}) USING TIMESTAMP 75;
72(2023-09-01T12:04:35.893000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xpd', 'uce', 'yzl' , {'72':toTimestamp(now())}) USING TIMESTAMP 73;
77(2023-09-01T12:04:35.902000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rds', 'ece', 'ltf' , {'77':toTimestamp(now())}) USING TIMESTAMP 78;
78(2023-09-01T12:04:35.902000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qux', 'vfe', 'xur' , {'78':toTimestamp(now())}) USING TIMESTAMP 79;
76(2023-09-01T12:04:35.905001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rpo', 'njw', 'twh' , {'76':toTimestamp(now())}) USING TIMESTAMP 77;
82(2023-09-01T12:04:35.907000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ohr', 'pvc', 'zub' , {'82':toTimestamp(now())}) USING TIMESTAMP 83;
81(2023-09-01T12:04:35.908000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('pur', 'xfc', 'msl' , {'81':toTimestamp(now())}) USING TIMESTAMP 82;
80(2023-09-01T12:04:35.904000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zif', 'zgd', 'osa' , {'80':toTimestamp(now())}) USING TIMESTAMP 81;
84(2023-09-01T12:04:35.912000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('igy', 'cki', 'qvf' , {'84':toTimestamp(now())}) USING TIMESTAMP 85;
79(2023-09-01T12:04:35.907000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uuk', 'hnr', 'rbg' , {'79':toTimestamp(now())}) USING TIMESTAMP 80;
85(2023-09-01T12:04:35.917000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('kat', 'cse', 'csm' , {'85':toTimestamp(now())}) USING TIMESTAMP 86;
88(2023-09-01T12:04:35.921000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('taf', 'lwz', 'bes' , {'88':toTimestamp(now())}) USING TIMESTAMP 89;
90(2023-09-01T12:04:35.923001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ion', 'ovq', 'drh' , {'90':toTimestamp(now())}) USING TIMESTAMP 91;
83(2023-09-01T12:04:35.915000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rzp', 'wtl', 'mpl' , {'83':toTimestamp(now())}) USING TIMESTAMP 84;
86(2023-09-01T12:04:35.916001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wss', 'tro', 'tzd' , {'86':toTimestamp(now())}) USING TIMESTAMP 87;
87(2023-09-01T12:04:35.917000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nit', 'mor', 'dti' , {'87':toTimestamp(now())}) USING TIMESTAMP 88;
89(2023-09-01T12:04:35.921000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rld', 'hzf', 'bdq' , {'89':toTimestamp(now())}) USING TIMESTAMP 90;
93(2023-09-01T12:04:35.931000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yje', 'vty', 'maw' , {'93':toTimestamp(now())}) USING TIMESTAMP 94;
96(2023-09-01T12:04:35.934000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('frx', 'jwt', 'rti' , {'96':toTimestamp(now())}) USING TIMESTAMP 97;
92(2023-09-01T12:04:35.929000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ixu', 'uhd', 'rnn' , {'92':toTimestamp(now())}) USING TIMESTAMP 93;
91(2023-09-01T12:04:35.925000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jae', 'evl', 'zzs' , {'91':toTimestamp(now())}) USING TIMESTAMP 92;
98(2023-09-01T12:04:35.934001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xti', 'sof', 'okg' , {'98':toTimestamp(now())}) USING TIMESTAMP 99;
95(2023-09-01T12:04:35.935000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bjd', 'dkd', 'cwb' , {'95':toTimestamp(now())}) USING TIMESTAMP 96;
94(2023-09-01T12:04:35.930000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dxe', 'njo', 'wrw' , {'94':toTimestamp(now())}) USING TIMESTAMP 95;
99(2023-09-01T12:04:35.936000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('klp', 'bli', 'yhc' , {'99':toTimestamp(now())}) USING TIMESTAMP 100;
100(2023-09-01T12:04:35.938000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vpa', 'qii', 'iyu' , {'100':toTimestamp(now())}) USING TIMESTAMP 101;
97(2023-09-01T12:04:35.931001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cma', 'bry', 'krx' , {'97':toTimestamp(now())}) USING TIMESTAMP 98;
102(2023-09-01T12:04:35.947000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ikq', 'krt', 'euk' , {'102':toTimestamp(now())}) USING TIMESTAMP 103;
104(2023-09-01T12:04:35.947001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uzg', 'qnc', 'jmk' , {'104':toTimestamp(now())}) USING TIMESTAMP 105;
103(2023-09-01T12:04:35.944000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yfd', 'ebf', 'hdj' , {'103':toTimestamp(now())}) USING TIMESTAMP 104;
101(2023-09-01T12:04:35.943000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mjd', 'fwb', 'cyd' , {'101':toTimestamp(now())}) USING TIMESTAMP 102;
105(2023-09-01T12:04:35.950000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dsk', 'bea', 'gxy' , {'105':toTimestamp(now())}) USING TIMESTAMP 106;
109(2023-09-01T12:04:35.952002) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zvv', 'htl', 'bfa' , {'109':toTimestamp(now())}) USING TIMESTAMP 110;
107(2023-09-01T12:04:35.956000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fgw', 'swq', 'uyw' , {'107':toTimestamp(now())}) USING TIMESTAMP 108;
108(2023-09-01T12:04:35.952001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lzu', 'pco', 'lsj' , {'108':toTimestamp(now())}) USING TIMESTAMP 109;
110(2023-09-01T12:04:35.952000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('kev', 'wzw', 'uli' , {'110':toTimestamp(now())}) USING TIMESTAMP 111;
106(2023-09-01T12:04:35.952000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hhz', 'zto', 'vjl' , {'106':toTimestamp(now())}) USING TIMESTAMP 107;
111(2023-09-01T12:04:35.961000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tyh', 'drw', 'dqy' , {'111':toTimestamp(now())}) USING TIMESTAMP 112;
113(2023-09-01T12:04:35.961000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('skd', 'dil', 'ngx' , {'113':toTimestamp(now())}) USING TIMESTAMP 114;
114(2023-09-01T12:04:35.962000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tml', 'rdw', 'ukg' , {'114':toTimestamp(now())}) USING TIMESTAMP 115;
115(2023-09-01T12:04:35.970001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uce', 'tmr', 'juq' , {'115':toTimestamp(now())}) USING TIMESTAMP 116;
112(2023-09-01T12:04:35.964001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tvx', 'eac', 'cvb' , {'112':toTimestamp(now())}) USING TIMESTAMP 113;
116(2023-09-01T12:04:35.967000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jfw', 'qbo', 'tkw' , {'116':toTimestamp(now())}) USING TIMESTAMP 117;
117(2023-09-01T12:04:35.974000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ozj', 'yrd', 'xfq' , {'117':toTimestamp(now())}) USING TIMESTAMP 118;
120(2023-09-01T12:04:35.973000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lpe', 'oxg', 'qal' , {'120':toTimestamp(now())}) USING TIMESTAMP 121;
121(2023-09-01T12:04:35.974000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('led', 'ogk', 'vwc' , {'121':toTimestamp(now())}) USING TIMESTAMP 122;
123(2023-09-01T12:04:35.977001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mvi', 'rhl', 'zfh' , {'123':toTimestamp(now())}) USING TIMESTAMP 124;
122(2023-09-01T12:04:35.978000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vvq', 'lfh', 'abh' , {'122':toTimestamp(now())}) USING TIMESTAMP 123;
119(2023-09-01T12:04:35.973001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wiv', 'wwx', 'cbg' , {'119':toTimestamp(now())}) USING TIMESTAMP 120;
126(2023-09-01T12:04:35.982000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rcq', 'cwp', 'vhl' , {'126':toTimestamp(now())}) USING TIMESTAMP 127;
128(2023-09-01T12:04:35.987001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('stn', 'hhi', 'uyi' , {'128':toTimestamp(now())}) USING TIMESTAMP 129;
124(2023-09-01T12:04:35.984000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hlk', 'jfb', 'utk' , {'124':toTimestamp(now())}) USING TIMESTAMP 125;
130(2023-09-01T12:04:35.987001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ayb', 'pes', 'zfv' , {'130':toTimestamp(now())}) USING TIMESTAMP 131;
127(2023-09-01T12:04:35.986000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rlm', 'yyz', 'aet' , {'127':toTimestamp(now())}) USING TIMESTAMP 128;
118(2023-09-01T12:04:35.974001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ndh', 'fff', 'jem' , {'118':toTimestamp(now())}) USING TIMESTAMP 119;
125(2023-09-01T12:04:35.985001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xgr', 'lxl', 'hvn' , {'125':toTimestamp(now())}) USING TIMESTAMP 126;
129(2023-09-01T12:04:35.989000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xtw', 'ebi', 'njb' , {'129':toTimestamp(now())}) USING TIMESTAMP 130;
131(2023-09-01T12:04:35.991001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nmu', 'eln', 'fmx' , {'131':toTimestamp(now())}) USING TIMESTAMP 132;
132(2023-09-01T12:04:35.988001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tqm', 'fqu', 'dit' , {'132':toTimestamp(now())}) USING TIMESTAMP 133;
133(2023-09-01T12:04:35.997000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('snr', 'qbj', 'pci' , {'133':toTimestamp(now())}) USING TIMESTAMP 134;
135(2023-09-01T12:04:35.999000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nhl', 'tfk', 'qml' , {'135':toTimestamp(now())}) USING TIMESTAMP 136;
136(2023-09-01T12:04:35.995000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hbn', 'orb', 'egd' , {'136':toTimestamp(now())}) USING TIMESTAMP 137;
139(2023-09-01T12:04:35.997001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zbi', 'uvk', 'ego' , {'139':toTimestamp(now())}) USING TIMESTAMP 140;
138(2023-09-01T12:04:35.997001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jhx', 'lpl', 'qjw' , {'138':toTimestamp(now())}) USING TIMESTAMP 139;
134(2023-09-01T12:04:36.000001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zuu', 'kuy', 'fjg' , {'134':toTimestamp(now())}) USING TIMESTAMP 135;
141(2023-09-01T12:04:35.999000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ucd', 'ewe', 'ghw' , {'141':toTimestamp(now())}) USING TIMESTAMP 142;
142(2023-09-01T12:04:36.008001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cno', 'ygj', 'xoa' , {'142':toTimestamp(now())}) USING TIMESTAMP 143;
137(2023-09-01T12:04:36) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lwy', 'ubs', 'dgf' , {'137':toTimestamp(now())}) USING TIMESTAMP 138;
140(2023-09-01T12:04:35.997001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mvr', 'pyy', 'dwl' , {'140':toTimestamp(now())}) USING TIMESTAMP 141;
145(2023-09-01T12:04:36.007000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('djn', 'ede', 'cpl' , {'145':toTimestamp(now())}) USING TIMESTAMP 146;
149(2023-09-01T12:04:36.024001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ugf', 'rop', 'cha' , {'149':toTimestamp(now())}) USING TIMESTAMP 150;
143(2023-09-01T12:04:36.008000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('auu', 'qng', 'ryd' , {'143':toTimestamp(now())}) USING TIMESTAMP 144;
144(2023-09-01T12:04:36.006000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yys', 'aml', 'van' , {'144':toTimestamp(now())}) USING TIMESTAMP 145;
150(2023-09-01T12:04:36.025000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cjc', 'swh', 'xkn' , {'150':toTimestamp(now())}) USING TIMESTAMP 151;
148(2023-09-01T12:04:36.023000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ibh', 'hmo', 'dqu' , {'148':toTimestamp(now())}) USING TIMESTAMP 149;
146(2023-09-01T12:04:36.015000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('epy', 'xjq', 'jve' , {'146':toTimestamp(now())}) USING TIMESTAMP 147;
151(2023-09-01T12:04:36.027000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fba', 'kfm', 'ota' , {'151':toTimestamp(now())}) USING TIMESTAMP 152;
153(2023-09-01T12:04:36.033000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wij', 'oii', 'caf' , {'153':toTimestamp(now())}) USING TIMESTAMP 154;
147(2023-09-01T12:04:36.024001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qmf', 'gvj', 'kso' , {'147':toTimestamp(now())}) USING TIMESTAMP 148;
152(2023-09-01T12:04:36.029001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bag', 'gfj', 'wrt' , {'152':toTimestamp(now())}) USING TIMESTAMP 153;
154(2023-09-01T12:04:36.030000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('gkz', 'mvn', 'ney' , {'154':toTimestamp(now())}) USING TIMESTAMP 155;
155(2023-09-01T12:04:36.032001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('msa', 'nvj', 'buc' , {'155':toTimestamp(now())}) USING TIMESTAMP 156;
158(2023-09-01T12:04:36.037000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('oot', 'fxu', 'jup' , {'158':toTimestamp(now())}) USING TIMESTAMP 159;
156(2023-09-01T12:04:36.032001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bvy', 'xdb', 'jyp' , {'156':toTimestamp(now())}) USING TIMESTAMP 157;
157(2023-09-01T12:04:36.032001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('gne', 'jqh', 'vlh' , {'157':toTimestamp(now())}) USING TIMESTAMP 158;
159(2023-09-01T12:04:36.040000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('erl', 'wsn', 'vcp' , {'159':toTimestamp(now())}) USING TIMESTAMP 160;
161(2023-09-01T12:04:36.044000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ptw', 'lpd', 'vmy' , {'161':toTimestamp(now())}) USING TIMESTAMP 162;
162(2023-09-01T12:04:36.044001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ims', 'hcw', 'sgr' , {'162':toTimestamp(now())}) USING TIMESTAMP 163;
160(2023-09-01T12:04:36.040001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('sys', 'cer', 'zzi' , {'160':toTimestamp(now())}) USING TIMESTAMP 161;
163(2023-09-01T12:04:36.044001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('duu', 'blh', 'iev' , {'163':toTimestamp(now())}) USING TIMESTAMP 164;
165(2023-09-01T12:04:36.045000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rde', 'obu', 'shn' , {'165':toTimestamp(now())}) USING TIMESTAMP 166;
164(2023-09-01T12:04:36.043000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jbv', 'mfr', 'nuq' , {'164':toTimestamp(now())}) USING TIMESTAMP 165;
167(2023-09-01T12:04:36.048000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ako', 'zpu', 'nen' , {'167':toTimestamp(now())}) USING TIMESTAMP 168;
166(2023-09-01T12:04:36.051000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bdz', 'srg', 'ayh' , {'166':toTimestamp(now())}) USING TIMESTAMP 167;
169(2023-09-01T12:04:36.057000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tcu', 'ceb', 'xjt' , {'169':toTimestamp(now())}) USING TIMESTAMP 170;
168(2023-09-01T12:04:36.048000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nzl', 'kcs', 'qon' , {'168':toTimestamp(now())}) USING TIMESTAMP 169;
173(2023-09-01T12:04:36.054000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qwd', 'bxf', 'zvt' , {'173':toTimestamp(now())}) USING TIMESTAMP 174;
171(2023-09-01T12:04:36.055000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yif', 'cid', 'rnv' , {'171':toTimestamp(now())}) USING TIMESTAMP 172;
172(2023-09-01T12:04:36.055000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uio', 'yse', 'spe' , {'172':toTimestamp(now())}) USING TIMESTAMP 173;
170(2023-09-01T12:04:36.058000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ysb', 'vzr', 'mrm' , {'170':toTimestamp(now())}) USING TIMESTAMP 171;
175(2023-09-01T12:04:36.061000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lnp', 'bni', 'bjm' , {'175':toTimestamp(now())}) USING TIMESTAMP 176;
174(2023-09-01T12:04:36.060001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wmy', 'hrd', 'jfs' , {'174':toTimestamp(now())}) USING TIMESTAMP 175;
179(2023-09-01T12:04:36.066000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('gzb', 'rbj', 'boi' , {'179':toTimestamp(now())}) USING TIMESTAMP 180;
177(2023-09-01T12:04:36.065000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('osr', 'qhv', 'gba' , {'177':toTimestamp(now())}) USING TIMESTAMP 178;
178(2023-09-01T12:04:36.067001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('atj', 'vby', 'jdm' , {'178':toTimestamp(now())}) USING TIMESTAMP 179;
180(2023-09-01T12:04:36.074001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jxz', 'mky', 'xcm' , {'180':toTimestamp(now())}) USING TIMESTAMP 181;
181(2023-09-01T12:04:36.071001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qqz', 'aup', 'nyv' , {'181':toTimestamp(now())}) USING TIMESTAMP 182;
182(2023-09-01T12:04:36.071001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('yqp', 'ixa', 'mii' , {'182':toTimestamp(now())}) USING TIMESTAMP 183;
176(2023-09-01T12:04:36.064001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jya', 'wge', 'frz' , {'176':toTimestamp(now())}) USING TIMESTAMP 177;
185(2023-09-01T12:04:36.080000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bbs', 'kwc', 'euq' , {'185':toTimestamp(now())}) USING TIMESTAMP 186;
183(2023-09-01T12:04:36.081000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ngd', 'yvg', 'xxy' , {'183':toTimestamp(now())}) USING TIMESTAMP 184;
184(2023-09-01T12:04:36.077001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rbi', 'wsm', 'ndu' , {'184':toTimestamp(now())}) USING TIMESTAMP 185;
187(2023-09-01T12:04:36.087000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('kfm', 'ykt', 'wry' , {'187':toTimestamp(now())}) USING TIMESTAMP 188;
186(2023-09-01T12:04:36.083001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xkf', 'lun', 'ntc' , {'186':toTimestamp(now())}) USING TIMESTAMP 187;
188(2023-09-01T12:04:36.085000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mez', 'jfx', 'qld' , {'188':toTimestamp(now())}) USING TIMESTAMP 189;
189(2023-09-01T12:04:36.087000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ehk', 'jkc', 'ajs' , {'189':toTimestamp(now())}) USING TIMESTAMP 190;
192(2023-09-01T12:04:36.093001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uim', 'tyk', 'ges' , {'192':toTimestamp(now())}) USING TIMESTAMP 193;
191(2023-09-01T12:04:36.091000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xea', 'sdk', 'tlp' , {'191':toTimestamp(now())}) USING TIMESTAMP 192;
193(2023-09-01T12:04:36.097000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lbg', 'epy', 'eiq' , {'193':toTimestamp(now())}) USING TIMESTAMP 194;
190(2023-09-01T12:04:36.090000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uvd', 'edb', 'jsp' , {'190':toTimestamp(now())}) USING TIMESTAMP 191;
194(2023-09-01T12:04:36.096000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bqt', 'vfw', 'upm' , {'194':toTimestamp(now())}) USING TIMESTAMP 195;
196(2023-09-01T12:04:36.100000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zxn', 'tgs', 'iad' , {'196':toTimestamp(now())}) USING TIMESTAMP 197;
198(2023-09-01T12:04:36.102000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zoo', 'znu', 'dlt' , {'198':toTimestamp(now())}) USING TIMESTAMP 199;
195(2023-09-01T12:04:36.102000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lic', 'crz', 'ejj' , {'195':toTimestamp(now())}) USING TIMESTAMP 196;
197(2023-09-01T12:04:36.104000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fub', 'bjk', 'zjy' , {'197':toTimestamp(now())}) USING TIMESTAMP 198;
200(2023-09-01T12:04:36.106000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tnc', 'cfs', 'fgf' , {'200':toTimestamp(now())}) USING TIMESTAMP 201;
201(2023-09-01T12:04:36.106000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('egt', 'qpx', 'jsh' , {'201':toTimestamp(now())}) USING TIMESTAMP 202;
199(2023-09-01T12:04:36.105000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zno', 'yvn', 'nno' , {'199':toTimestamp(now())}) USING TIMESTAMP 200;
202(2023-09-01T12:04:36.114000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ojg', 'ceh', 'eds' , {'202':toTimestamp(now())}) USING TIMESTAMP 203;
203(2023-09-01T12:04:36.116000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('biu', 'asr', 'lwx' , {'203':toTimestamp(now())}) USING TIMESTAMP 204;
207(2023-09-01T12:04:36.117000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jmc', 'jwt', 'uqq' , {'207':toTimestamp(now())}) USING TIMESTAMP 208;
204(2023-09-01T12:04:36.120001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ofx', 'dpy', 'qcl' , {'204':toTimestamp(now())}) USING TIMESTAMP 205;
205(2023-09-01T12:04:36.122000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ehs', 'vhu', 'dvb' , {'205':toTimestamp(now())}) USING TIMESTAMP 206;
215(2023-09-01T12:04:36.150000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fti', 'igj', 'eis' , {'215':toTimestamp(now())}) USING TIMESTAMP 216;
209(2023-09-01T12:04:36.121001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ykh', 'gmv', 'fqq' , {'209':toTimestamp(now())}) USING TIMESTAMP 210;
208(2023-09-01T12:04:36.149000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('waz', 'aul', 'pin' , {'208':toTimestamp(now())}) USING TIMESTAMP 209;
206(2023-09-01T12:04:36.116000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uyn', 'uel', 'giy' , {'206':toTimestamp(now())}) USING TIMESTAMP 207;
212(2023-09-01T12:04:36.150000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lwf', 'ipv', 'dzx' , {'212':toTimestamp(now())}) USING TIMESTAMP 213;
216(2023-09-01T12:04:36.141001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fxu', 'vfj', 'vwy' , {'216':toTimestamp(now())}) USING TIMESTAMP 217;
219(2023-09-01T12:04:36.160000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('sfp', 'zum', 'wqt' , {'219':toTimestamp(now())}) USING TIMESTAMP 220;
220(2023-09-01T12:04:36.163001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lrh', 'smu', 'byx' , {'220':toTimestamp(now())}) USING TIMESTAMP 221;
213(2023-09-01T12:04:36.141000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jpo', 'bby', 'mtf' , {'213':toTimestamp(now())}) USING TIMESTAMP 214;
217(not happened) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('tcc', 'kja', 'ciw' , {'217':toTimestamp(now())}) USING TIMESTAMP 218;
221(2023-09-01T12:04:36.164000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nyz', 'zds', 'rcm' , {'221':toTimestamp(now())}) USING TIMESTAMP 222;
223(2023-09-01T12:04:36.171001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wiu', 'qsg', 'ray' , {'223':toTimestamp(now())}) USING TIMESTAMP 224;
222(2023-09-01T12:04:36.171000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('pyy', 'iim', 'cbt' , {'222':toTimestamp(now())}) USING TIMESTAMP 223;
224(2023-09-01T12:04:36.176001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('odn', 'eqz', 'vhg' , {'224':toTimestamp(now())}) USING TIMESTAMP 225;
226(2023-09-01T12:04:36.177000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mpr', 'hrj', 'lut' , {'226':toTimestamp(now())}) USING TIMESTAMP 227;
228(2023-09-01T12:04:36.178001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mjv', 'xmm', 'url' , {'228':toTimestamp(now())}) USING TIMESTAMP 229;
230(2023-09-01T12:04:36.184000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('gei', 'rbg', 'emn' , {'230':toTimestamp(now())}) USING TIMESTAMP 231;
210(2023-09-01T12:04:36.154000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fbj', 'vvk', 'cfs' , {'210':toTimestamp(now())}) USING TIMESTAMP 211;
211(2023-09-01T12:04:36.160000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('llf', 'amq', 'yno' , {'211':toTimestamp(now())}) USING TIMESTAMP 212;
229(2023-09-01T12:04:36.181000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('toc', 'bfe', 'iqc' , {'229':toTimestamp(now())}) USING TIMESTAMP 230;
225(2023-09-01T12:04:36.173000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zdi', 'vob', 'sdk' , {'225':toTimestamp(now())}) USING TIMESTAMP 226;
218(2023-09-01T12:04:36.162001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mwj', 'vii', 'hly' , {'218':toTimestamp(now())}) USING TIMESTAMP 219;
231(2023-09-01T12:04:36.184000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lhs', 'pvk', 'bov' , {'231':toTimestamp(now())}) USING TIMESTAMP 232;
232(2023-09-01T12:04:36.189000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qpi', 'ajz', 'htu' , {'232':toTimestamp(now())}) USING TIMESTAMP 233;
227(2023-09-01T12:04:36.177000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('lnh', 'pxi', 'skb' , {'227':toTimestamp(now())}) USING TIMESTAMP 228;
214(2023-09-01T12:04:36.156000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('evl', 'amv', 'zjp' , {'214':toTimestamp(now())}) USING TIMESTAMP 215;
234(2023-09-01T12:04:36.190001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mxy', 'tbg', 'sjx' , {'234':toTimestamp(now())}) USING TIMESTAMP 235;
235(2023-09-01T12:04:36.192000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nfx', 'rnu', 'nkd' , {'235':toTimestamp(now())}) USING TIMESTAMP 236;
233(2023-09-01T12:04:36.194000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qjx', 'nok', 'euo' , {'233':toTimestamp(now())}) USING TIMESTAMP 234;
237(2023-09-01T12:04:36.196000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jux', 'trn', 'qyx' , {'237':toTimestamp(now())}) USING TIMESTAMP 238;
240(2023-09-01T12:04:36.198000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hyw', 'tng', 'yhf' , {'240':toTimestamp(now())}) USING TIMESTAMP 241;
241(not happened) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('thl', 'bgf', 'xuu' , {'241':toTimestamp(now())}) USING TIMESTAMP 242;
238(2023-09-01T12:04:36.195001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fss', 'pgf', 'ahy' , {'238':toTimestamp(now())}) USING TIMESTAMP 239;
244(2023-09-01T12:04:36.205000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qqw', 'xtg', 'yye' , {'244':toTimestamp(now())}) USING TIMESTAMP 245;
243(2023-09-01T12:04:36.201001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bro', 'ztw', 'qaw' , {'243':toTimestamp(now())}) USING TIMESTAMP 244;
236(2023-09-01T12:04:36.194000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('puo', 'bcz', 'vog' , {'236':toTimestamp(now())}) USING TIMESTAMP 237;
246(2023-09-01T12:04:36.209001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ezq', 'cvy', 'tzx' , {'246':toTimestamp(now())}) USING TIMESTAMP 247;
249(2023-09-01T12:04:36.216001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ijx', 'gjg', 'awx' , {'249':toTimestamp(now())}) USING TIMESTAMP 250;
245(2023-09-01T12:04:36.208000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('itx', 'quu', 'baq' , {'245':toTimestamp(now())}) USING TIMESTAMP 246;
247(2023-09-01T12:04:36.208000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bdh', 'uyl', 'qld' , {'247':toTimestamp(now())}) USING TIMESTAMP 248;
239(2023-09-01T12:04:36.199001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('kag', 'cty', 'bwv' , {'239':toTimestamp(now())}) USING TIMESTAMP 240;
248(2023-09-01T12:04:36.213000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('byd', 'ces', 'clk' , {'248':toTimestamp(now())}) USING TIMESTAMP 249;
251(2023-09-01T12:04:36.220000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ihm', 'rnp', 'phc' , {'251':toTimestamp(now())}) USING TIMESTAMP 252;
250(2023-09-01T12:04:36.223001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jvb', 'eyk', 'lfk' , {'250':toTimestamp(now())}) USING TIMESTAMP 251;
254(2023-09-01T12:04:36.229000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dvh', 'wqr', 'hqh' , {'254':toTimestamp(now())}) USING TIMESTAMP 255;
256(2023-09-01T12:04:36.228000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ydr', 'woj', 'abn' , {'256':toTimestamp(now())}) USING TIMESTAMP 257;
242(2023-09-01T12:04:36.203000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('out', 'erm', 'rpx' , {'242':toTimestamp(now())}) USING TIMESTAMP 243;
255(2023-09-01T12:04:36.228000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ufb', 'bjm', 'wqt' , {'255':toTimestamp(now())}) USING TIMESTAMP 256;
258(2023-09-01T12:04:36.235000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zdr', 'vib', 'crz' , {'258':toTimestamp(now())}) USING TIMESTAMP 259;
253(2023-09-01T12:04:36.228000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('bjd', 'bgv', 'eyt' , {'253':toTimestamp(now())}) USING TIMESTAMP 254;
257(2023-09-01T12:04:36.234000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dpt', 'sfu', 'bqh' , {'257':toTimestamp(now())}) USING TIMESTAMP 258;
252(2023-09-01T12:04:36.226000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ztm', 'num', 'mcv' , {'252':toTimestamp(now())}) USING TIMESTAMP 253;
259(2023-09-01T12:04:36.237001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('oax', 'mnc', 'nhk' , {'259':toTimestamp(now())}) USING TIMESTAMP 260;
260(2023-09-01T12:04:36.235000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('iix', 'ify', 'hxx' , {'260':toTimestamp(now())}) USING TIMESTAMP 261;
261(2023-09-01T12:04:36.241000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qpz', 'ijy', 'xwm' , {'261':toTimestamp(now())}) USING TIMESTAMP 262;
264(2023-09-01T12:04:36.240000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('svg', 'ugl', 'sgk' , {'264':toTimestamp(now())}) USING TIMESTAMP 265;
262(2023-09-01T12:04:36.239000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hqa', 'gvi', 'khj' , {'262':toTimestamp(now())}) USING TIMESTAMP 263;
268(2023-09-01T12:04:36.246001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xaq', 'vhg', 'svx' , {'268':toTimestamp(now())}) USING TIMESTAMP 269;
266(2023-09-01T12:04:36.245001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vdt', 'icg', 'wfs' , {'266':toTimestamp(now())}) USING TIMESTAMP 267;
267(2023-09-01T12:04:36.246000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ftm', 'fbd', 'shh' , {'267':toTimestamp(now())}) USING TIMESTAMP 268;
263(2023-09-01T12:04:36.238001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qpy', 'ajt', 'dkn' , {'263':toTimestamp(now())}) USING TIMESTAMP 264;
265(2023-09-01T12:04:36.241000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('uqa', 'omq', 'bil' , {'265':toTimestamp(now())}) USING TIMESTAMP 266;
271(2023-09-01T12:04:36.251000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('alt', 'uof', 'rin' , {'271':toTimestamp(now())}) USING TIMESTAMP 272;
272(2023-09-01T12:04:36.247000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('dqd', 'ejc', 'key' , {'272':toTimestamp(now())}) USING TIMESTAMP 273;
269(2023-09-01T12:04:36.244000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ing', 'uau', 'qok' , {'269':toTimestamp(now())}) USING TIMESTAMP 270;
270(2023-09-01T12:04:36.251001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jmi', 'slm', 'mzy' , {'270':toTimestamp(now())}) USING TIMESTAMP 271;
273(2023-09-01T12:04:36.255000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qdo', 'mwa', 'kwg' , {'273':toTimestamp(now())}) USING TIMESTAMP 274;
274(2023-09-01T12:04:36.256000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('vbe', 'bma', 'clw' , {'274':toTimestamp(now())}) USING TIMESTAMP 275;
276(2023-09-01T12:04:36.255000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('guk', 'crn', 'ddp' , {'276':toTimestamp(now())}) USING TIMESTAMP 277;
277(2023-09-01T12:04:36.260000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('jis', 'pwz', 'bkj' , {'277':toTimestamp(now())}) USING TIMESTAMP 278;
278(2023-09-01T12:04:36.262000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rba', 'cwg', 'pzk' , {'278':toTimestamp(now())}) USING TIMESTAMP 279;
275(2023-09-01T12:04:36.262001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('alr', 'cxs', 'rsq' , {'275':toTimestamp(now())}) USING TIMESTAMP 276;
283(2023-09-01T12:04:36.266001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zno', 'jgo', 'pmw' , {'283':toTimestamp(now())}) USING TIMESTAMP 284;
279(2023-09-01T12:04:36.261000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('xyy', 'yhs', 'gkd' , {'279':toTimestamp(now())}) USING TIMESTAMP 280;
282(2023-09-01T12:04:36.264000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('zzj', 'qph', 'fch' , {'282':toTimestamp(now())}) USING TIMESTAMP 283;
280(2023-09-01T12:04:36.269000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ynk', 'hmo', 'ppp' , {'280':toTimestamp(now())}) USING TIMESTAMP 281;
281(2023-09-01T12:04:36.266001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('mcf', 'sog', 'xvg' , {'281':toTimestamp(now())}) USING TIMESTAMP 282;
285(2023-09-01T12:04:36.274000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ant', 'xlq', 'cnw' , {'285':toTimestamp(now())}) USING TIMESTAMP 286;
284(2023-09-01T12:04:36.278001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('qth', 'pbt', 'baa' , {'284':toTimestamp(now())}) USING TIMESTAMP 285;
289(2023-09-01T12:04:36.287000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fsu', 'zuc', 'mta' , {'289':toTimestamp(now())}) USING TIMESTAMP 290;
287(2023-09-01T12:04:36.281000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('hmh', 'mrw', 'yei' , {'287':toTimestamp(now())}) USING TIMESTAMP 288;
290(2023-09-01T12:04:36.287001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('adv', 'chs', 'jcy' , {'290':toTimestamp(now())}) USING TIMESTAMP 291;
288(2023-09-01T12:04:36.282000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('wtm', 'nef', 'fye' , {'288':toTimestamp(now())}) USING TIMESTAMP 289;
291(2023-09-01T12:04:36.286000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('oye', 'twv', 'ogl' , {'291':toTimestamp(now())}) USING TIMESTAMP 292;
292(2023-09-01T12:04:36.288000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nlk', 'qzw', 'hxn' , {'292':toTimestamp(now())}) USING TIMESTAMP 293;
293(2023-09-01T12:04:36.288001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ejh', 'uwv', 'bgm' , {'293':toTimestamp(now())}) USING TIMESTAMP 294;
286(2023-09-01T12:04:36.284000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('fbg', 'ghn', 'ikq' , {'286':toTimestamp(now())}) USING TIMESTAMP 287;
296(2023-09-01T12:04:36.295000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('rrt', 'gsu', 'wou' , {'296':toTimestamp(now())}) USING TIMESTAMP 297;
294(2023-09-01T12:04:36.292000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ytv', 'fhv', 'cjz' , {'294':toTimestamp(now())}) USING TIMESTAMP 295;
300(2023-09-01T12:04:36.299000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 301 SET C = '300' , toTS = toTS + {'300':toTimestamp(now())}  WHERE A = 'zqy';
295(2023-09-01T12:04:36.301002) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('twd', 'dps', 'srx' , {'295':toTimestamp(now())}) USING TIMESTAMP 296;
299(2023-09-01T12:04:36.298000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('ytz', 'flz', 'fyp' , {'299':toTimestamp(now())}) USING TIMESTAMP 300;
297(2023-09-01T12:04:36.301001) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('nbi', 'tdr', 'qrg' , {'297':toTimestamp(now())}) USING TIMESTAMP 298;
298(2023-09-01T12:04:36.299000) QUERY: Parsing INSERT INTO amit.barak (A, B, C, toTS) VALUES('cry', 'hqi', 'rrv' , {'298':toTimestamp(now())}) USING TIMESTAMP 299;
302(2023-09-01T12:04:36.302001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 303 SET C = '302' , toTS = toTS + {'302':toTimestamp(now())}  WHERE A = 'zqy';
301(2023-09-01T12:04:36.301000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 302 SET C = '301' , toTS = toTS + {'301':toTimestamp(now())}  WHERE A = 'zqy';
303(2023-09-01T12:04:36.308001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 304 SET C = '303' , toTS = toTS + {'303':toTimestamp(now())}  WHERE A = 'zqy';
305(2023-09-01T12:04:36.308001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 306 SET C = '305' , toTS = toTS + {'305':toTimestamp(now())}  WHERE A = 'zqy';
306(2023-09-01T12:04:36.310000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 307 SET C = '306' , toTS = toTS + {'306':toTimestamp(now())}  WHERE A = 'zqy';
304(2023-09-01T12:04:36.309000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 305 SET C = '304' , toTS = toTS + {'304':toTimestamp(now())}  WHERE A = 'zqy';
308(2023-09-01T12:04:36.315001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 309 SET C = '308' , toTS = toTS + {'308':toTimestamp(now())}  WHERE A = 'zqy';
307(2023-09-01T12:04:36.315001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 308 SET C = '307' , toTS = toTS + {'307':toTimestamp(now())}  WHERE A = 'zqy';
309(2023-09-01T12:04:36.315002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 310 SET C = '309' , toTS = toTS + {'309':toTimestamp(now())}  WHERE A = 'zqy';
310(2023-09-01T12:04:36.322001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 311 SET C = '310' , toTS = toTS + {'310':toTimestamp(now())}  WHERE A = 'zqy';
312(2023-09-01T12:04:36.322000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 313 SET C = '312' , toTS = toTS + {'312':toTimestamp(now())}  WHERE A = 'zqy';
311(2023-09-01T12:04:36.321000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 312 SET C = '311' , toTS = toTS + {'311':toTimestamp(now())}  WHERE A = 'zqy';
313(2023-09-01T12:04:36.327000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 314 SET C = '313' , toTS = toTS + {'313':toTimestamp(now())}  WHERE A = 'zqy';
314(2023-09-01T12:04:36.329000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 315 SET C = '314' , toTS = toTS + {'314':toTimestamp(now())}  WHERE A = 'zqy';
316(2023-09-01T12:04:36.329001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 317 SET C = '316' , toTS = toTS + {'316':toTimestamp(now())}  WHERE A = 'zqy';
315(2023-09-01T12:04:36.329001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 316 SET C = '315' , toTS = toTS + {'315':toTimestamp(now())}  WHERE A = 'zqy';
317(2023-09-01T12:04:36.334001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 318 SET C = '317' , toTS = toTS + {'317':toTimestamp(now())}  WHERE A = 'zqy';
318(2023-09-01T12:04:36.335001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 319 SET C = '318' , toTS = toTS + {'318':toTimestamp(now())}  WHERE A = 'zqy';
319(2023-09-01T12:04:36.335001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 320 SET C = '319' , toTS = toTS + {'319':toTimestamp(now())}  WHERE A = 'zqy';
322(2023-09-01T12:04:36.341000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 323 SET C = '322' , toTS = toTS + {'322':toTimestamp(now())}  WHERE A = 'zqy';
321(2023-09-01T12:04:36.341001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 322 SET C = '321' , toTS = toTS + {'321':toTimestamp(now())}  WHERE A = 'zqy';
320(2023-09-01T12:04:36.340001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 321 SET C = '320' , toTS = toTS + {'320':toTimestamp(now())}  WHERE A = 'zqy';
325(2023-09-01T12:04:36.348002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 326 SET C = '325' , toTS = toTS + {'325':toTimestamp(now())}  WHERE A = 'zqy';
327(2023-09-01T12:04:36.353000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 328 SET C = '327' , toTS = toTS + {'327':toTimestamp(now())}  WHERE A = 'zqy';
324(2023-09-01T12:04:36.348000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 325 SET C = '324' , toTS = toTS + {'324':toTimestamp(now())}  WHERE A = 'zqy';
326(2023-09-01T12:04:36.348002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 327 SET C = '326' , toTS = toTS + {'326':toTimestamp(now())}  WHERE A = 'zqy';
323(2023-09-01T12:04:36.348001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 324 SET C = '323' , toTS = toTS + {'323':toTimestamp(now())}  WHERE A = 'zqy';
329(2023-09-01T12:04:36.355000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 330 SET C = '329' , toTS = toTS + {'329':toTimestamp(now())}  WHERE A = 'zqy';
328(2023-09-01T12:04:36.356000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 329 SET C = '328' , toTS = toTS + {'328':toTimestamp(now())}  WHERE A = 'zqy';
330(2023-09-01T12:04:36.360001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 331 SET C = '330' , toTS = toTS + {'330':toTimestamp(now())}  WHERE A = 'zqy';
332(2023-09-01T12:04:36.361000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 333 SET C = '332' , toTS = toTS + {'332':toTimestamp(now())}  WHERE A = 'zqy';
331(2023-09-01T12:04:36.360001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 332 SET C = '331' , toTS = toTS + {'331':toTimestamp(now())}  WHERE A = 'zqy';
333(2023-09-01T12:04:36.367000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 334 SET C = '333' , toTS = toTS + {'333':toTimestamp(now())}  WHERE A = 'zqy';
336(2023-09-01T12:04:36.368001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 337 SET C = '336' , toTS = toTS + {'336':toTimestamp(now())}  WHERE A = 'zqy';
334(2023-09-01T12:04:36.369000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 335 SET C = '334' , toTS = toTS + {'334':toTimestamp(now())}  WHERE A = 'zqy';
337(2023-09-01T12:04:36.369000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 338 SET C = '337' , toTS = toTS + {'337':toTimestamp(now())}  WHERE A = 'zqy';
335(2023-09-01T12:04:36.368001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 336 SET C = '335' , toTS = toTS + {'335':toTimestamp(now())}  WHERE A = 'zqy';
338(2023-09-01T12:04:36.376001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 339 SET C = '338' , toTS = toTS + {'338':toTimestamp(now())}  WHERE A = 'zqy';
342(2023-09-01T12:04:36.378000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 343 SET C = '342' , toTS = toTS + {'342':toTimestamp(now())}  WHERE A = 'zqy';
341(2023-09-01T12:04:36.377001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 342 SET C = '341' , toTS = toTS + {'341':toTimestamp(now())}  WHERE A = 'zqy';
340(2023-09-01T12:04:36.377001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 341 SET C = '340' , toTS = toTS + {'340':toTimestamp(now())}  WHERE A = 'zqy';
339(2023-09-01T12:04:36.377001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 340 SET C = '339' , toTS = toTS + {'339':toTimestamp(now())}  WHERE A = 'zqy';
343(2023-09-01T12:04:36.383000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 344 SET C = '343' , toTS = toTS + {'343':toTimestamp(now())}  WHERE A = 'zqy';
346(2023-09-01T12:04:36.390000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 347 SET C = '346' , toTS = toTS + {'346':toTimestamp(now())}  WHERE A = 'zqy';
347(2023-09-01T12:04:36.389001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 348 SET C = '347' , toTS = toTS + {'347':toTimestamp(now())}  WHERE A = 'zqy';
344(2023-09-01T12:04:36.389000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 345 SET C = '344' , toTS = toTS + {'344':toTimestamp(now())}  WHERE A = 'zqy';
345(2023-09-01T12:04:36.389002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 346 SET C = '345' , toTS = toTS + {'345':toTimestamp(now())}  WHERE A = 'zqy';
351(2023-09-01T12:04:36.396001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 352 SET C = '351' , toTS = toTS + {'351':toTimestamp(now())}  WHERE A = 'zqy';
349(2023-09-01T12:04:36.396001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 350 SET C = '349' , toTS = toTS + {'349':toTimestamp(now())}  WHERE A = 'zqy';
350(2023-09-01T12:04:36.396002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 351 SET C = '350' , toTS = toTS + {'350':toTimestamp(now())}  WHERE A = 'zqy';
352(2023-09-01T12:04:36.396001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 353 SET C = '352' , toTS = toTS + {'352':toTimestamp(now())}  WHERE A = 'zqy';
348(2023-09-01T12:04:36.395000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 349 SET C = '348' , toTS = toTS + {'348':toTimestamp(now())}  WHERE A = 'zqy';
353(2023-09-01T12:04:36.400000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 354 SET C = '353' , toTS = toTS + {'353':toTimestamp(now())}  WHERE A = 'zqy';
355(2023-09-01T12:04:36.407001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 356 SET C = '355' , toTS = toTS + {'355':toTimestamp(now())}  WHERE A = 'zqy';
354(2023-09-01T12:04:36.405000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 355 SET C = '354' , toTS = toTS + {'354':toTimestamp(now())}  WHERE A = 'zqy';
356(2023-09-01T12:04:36.405001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 357 SET C = '356' , toTS = toTS + {'356':toTimestamp(now())}  WHERE A = 'zqy';
357(2023-09-01T12:04:36.407001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 358 SET C = '357' , toTS = toTS + {'357':toTimestamp(now())}  WHERE A = 'zqy';
361(2023-09-01T12:04:36.412000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 362 SET C = '361' , toTS = toTS + {'361':toTimestamp(now())}  WHERE A = 'zqy';
360(2023-09-01T12:04:36.412001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 361 SET C = '360' , toTS = toTS + {'360':toTimestamp(now())}  WHERE A = 'zqy';
358(2023-09-01T12:04:36.411001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 359 SET C = '358' , toTS = toTS + {'358':toTimestamp(now())}  WHERE A = 'zqy';
359(2023-09-01T12:04:36.411001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 360 SET C = '359' , toTS = toTS + {'359':toTimestamp(now())}  WHERE A = 'zqy';
362(2023-09-01T12:04:36.412001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 363 SET C = '362' , toTS = toTS + {'362':toTimestamp(now())}  WHERE A = 'zqy';
363(2023-09-01T12:04:36.419000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 364 SET C = '363' , toTS = toTS + {'363':toTimestamp(now())}  WHERE A = 'zqy';
366(2023-09-01T12:04:36.426001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 367 SET C = '366' , toTS = toTS + {'366':toTimestamp(now())}  WHERE A = 'zqy';
367(2023-09-01T12:04:36.426000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 368 SET C = '367' , toTS = toTS + {'367':toTimestamp(now())}  WHERE A = 'zqy';
364(2023-09-01T12:04:36.425001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 365 SET C = '364' , toTS = toTS + {'364':toTimestamp(now())}  WHERE A = 'zqy';
365(2023-09-01T12:04:36.425001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 366 SET C = '365' , toTS = toTS + {'365':toTimestamp(now())}  WHERE A = 'zqy';
372(2023-09-01T12:04:36.433000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 373 SET C = '372' , toTS = toTS + {'372':toTimestamp(now())}  WHERE A = 'zqy';
368(2023-09-01T12:04:36.432000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 369 SET C = '368' , toTS = toTS + {'368':toTimestamp(now())}  WHERE A = 'zqy';
371(2023-09-01T12:04:36.433001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 372 SET C = '371' , toTS = toTS + {'371':toTimestamp(now())}  WHERE A = 'zqy';
370(2023-09-01T12:04:36.433000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 371 SET C = '370' , toTS = toTS + {'370':toTimestamp(now())}  WHERE A = 'zqy';
369(2023-09-01T12:04:36.432000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 370 SET C = '369' , toTS = toTS + {'369':toTimestamp(now())}  WHERE A = 'zqy';
373(2023-09-01T12:04:36.438000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 374 SET C = '373' , toTS = toTS + {'373':toTimestamp(now())}  WHERE A = 'zqy';
376(2023-09-01T12:04:36.444001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 377 SET C = '376' , toTS = toTS + {'376':toTimestamp(now())}  WHERE A = 'zqy';
375(2023-09-01T12:04:36.444001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 376 SET C = '375' , toTS = toTS + {'375':toTimestamp(now())}  WHERE A = 'zqy';
378(2023-09-01T12:04:36.450000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 379 SET C = '378' , toTS = toTS + {'378':toTimestamp(now())}  WHERE A = 'zqy';
380(2023-09-01T12:04:36.452001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 381 SET C = '380' , toTS = toTS + {'380':toTimestamp(now())}  WHERE A = 'zqy';
374(2023-09-01T12:04:36.443000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 375 SET C = '374' , toTS = toTS + {'374':toTimestamp(now())}  WHERE A = 'zqy';
377(2023-09-01T12:04:36.444000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 378 SET C = '377' , toTS = toTS + {'377':toTimestamp(now())}  WHERE A = 'zqy';
382(2023-09-01T12:04:36.452000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 383 SET C = '382' , toTS = toTS + {'382':toTimestamp(now())}  WHERE A = 'zqy';
381(2023-09-01T12:04:36.451000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 382 SET C = '381' , toTS = toTS + {'381':toTimestamp(now())}  WHERE A = 'zqy';
379(2023-09-01T12:04:36.452001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 380 SET C = '379' , toTS = toTS + {'379':toTimestamp(now())}  WHERE A = 'zqy';
383(2023-09-01T12:04:36.457000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 384 SET C = '383' , toTS = toTS + {'383':toTimestamp(now())}  WHERE A = 'zqy';
385(2023-09-01T12:04:36.464000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 386 SET C = '385' , toTS = toTS + {'385':toTimestamp(now())}  WHERE A = 'zqy';
387(2023-09-01T12:04:36.467002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 388 SET C = '387' , toTS = toTS + {'387':toTimestamp(now())}  WHERE A = 'zqy';
389(2023-09-01T12:04:36.467002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 390 SET C = '389' , toTS = toTS + {'389':toTimestamp(now())}  WHERE A = 'zqy';
386(2023-09-01T12:04:36.467000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 387 SET C = '386' , toTS = toTS + {'386':toTimestamp(now())}  WHERE A = 'zqy';
388(2023-09-01T12:04:36.468000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 389 SET C = '388' , toTS = toTS + {'388':toTimestamp(now())}  WHERE A = 'zqy';
390(2023-09-01T12:04:36.467002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 391 SET C = '390' , toTS = toTS + {'390':toTimestamp(now())}  WHERE A = 'zqy';
394(2023-09-01T12:04:36.476000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 395 SET C = '394' , toTS = toTS + {'394':toTimestamp(now())}  WHERE A = 'zqy';
384(2023-09-01T12:04:36.466001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 385 SET C = '384' , toTS = toTS + {'384':toTimestamp(now())}  WHERE A = 'zqy';
396(2023-09-01T12:04:36.478001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 397 SET C = '396' , toTS = toTS + {'396':toTimestamp(now())}  WHERE A = 'zqy';
391(2023-09-01T12:04:36.472000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 392 SET C = '391' , toTS = toTS + {'391':toTimestamp(now())}  WHERE A = 'zqy';
392(2023-09-01T12:04:36.472001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 393 SET C = '392' , toTS = toTS + {'392':toTimestamp(now())}  WHERE A = 'zqy';
393(2023-09-01T12:04:36.476000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 394 SET C = '393' , toTS = toTS + {'393':toTimestamp(now())}  WHERE A = 'zqy';
395(2023-09-01T12:04:36.478000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 396 SET C = '395' , toTS = toTS + {'395':toTimestamp(now())}  WHERE A = 'zqy';
397(2023-09-01T12:04:36.481000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 398 SET C = '397' , toTS = toTS + {'397':toTimestamp(now())}  WHERE A = 'zqy';
398(2023-09-01T12:04:36.482000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 399 SET C = '398' , toTS = toTS + {'398':toTimestamp(now())}  WHERE A = 'zqy';
399(2023-09-01T12:04:36.482001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 400 SET C = '399' , toTS = toTS + {'399':toTimestamp(now())}  WHERE A = 'zqy';
401(2023-09-01T12:04:36.490001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 402 SET C = '401' , toTS = toTS + {'401':toTimestamp(now())}  WHERE A = 'zqy';
404(2023-09-01T12:04:36.491000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 405 SET C = '404' , toTS = toTS + {'404':toTimestamp(now())}  WHERE A = 'zqy';
400(2023-09-01T12:04:36.488000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 401 SET C = '400' , toTS = toTS + {'400':toTimestamp(now())}  WHERE A = 'zqy';
403(2023-09-01T12:04:36.490000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 404 SET C = '403' , toTS = toTS + {'403':toTimestamp(now())}  WHERE A = 'zqy';
402(2023-09-01T12:04:36.491001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 403 SET C = '402' , toTS = toTS + {'402':toTimestamp(now())}  WHERE A = 'zqy';
406(2023-09-01T12:04:36.494000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 407 SET C = '406' , toTS = toTS + {'406':toTimestamp(now())}  WHERE A = 'zqy';
405(2023-09-01T12:04:36.494001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 406 SET C = '405' , toTS = toTS + {'405':toTimestamp(now())}  WHERE A = 'zqy';
407(2023-09-01T12:04:36.497001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 408 SET C = '407' , toTS = toTS + {'407':toTimestamp(now())}  WHERE A = 'zqy';
408(2023-09-01T12:04:36.499000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 409 SET C = '408' , toTS = toTS + {'408':toTimestamp(now())}  WHERE A = 'zqy';
409(2023-09-01T12:04:36.498000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 410 SET C = '409' , toTS = toTS + {'409':toTimestamp(now())}  WHERE A = 'zqy';
411(2023-09-01T12:04:36.503000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 412 SET C = '411' , toTS = toTS + {'411':toTimestamp(now())}  WHERE A = 'zqy';
413(2023-09-01T12:04:36.504000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 414 SET C = '413' , toTS = toTS + {'413':toTimestamp(now())}  WHERE A = 'zqy';
412(2023-09-01T12:04:36.503001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 413 SET C = '412' , toTS = toTS + {'412':toTimestamp(now())}  WHERE A = 'zqy';
414(2023-09-01T12:04:36.504001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 415 SET C = '414' , toTS = toTS + {'414':toTimestamp(now())}  WHERE A = 'zqy';
410(2023-09-01T12:04:36.502000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 411 SET C = '410' , toTS = toTS + {'410':toTimestamp(now())}  WHERE A = 'zqy';
417(2023-09-01T12:04:36.510000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 418 SET C = '417' , toTS = toTS + {'417':toTimestamp(now())}  WHERE A = 'zqy';
416(2023-09-01T12:04:36.509000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 417 SET C = '416' , toTS = toTS + {'416':toTimestamp(now())}  WHERE A = 'zqy';
419(2023-09-01T12:04:36.513000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 420 SET C = '419' , toTS = toTS + {'419':toTimestamp(now())}  WHERE A = 'zqy';
415(2023-09-01T12:04:36.508000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 416 SET C = '415' , toTS = toTS + {'415':toTimestamp(now())}  WHERE A = 'zqy';
418(2023-09-01T12:04:36.514001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 419 SET C = '418' , toTS = toTS + {'418':toTimestamp(now())}  WHERE A = 'zqy';
420(2023-09-01T12:04:36.518001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 421 SET C = '420' , toTS = toTS + {'420':toTimestamp(now())}  WHERE A = 'zqy';
421(2023-09-01T12:04:36.518001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 422 SET C = '421' , toTS = toTS + {'421':toTimestamp(now())}  WHERE A = 'zqy';
422(2023-09-01T12:04:36.519001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 423 SET C = '422' , toTS = toTS + {'422':toTimestamp(now())}  WHERE A = 'zqy';
426(2023-09-01T12:04:36.525001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 427 SET C = '426' , toTS = toTS + {'426':toTimestamp(now())}  WHERE A = 'zqy';
423(2023-09-01T12:04:36.519000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 424 SET C = '423' , toTS = toTS + {'423':toTimestamp(now())}  WHERE A = 'zqy';
425(2023-09-01T12:04:36.525001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 426 SET C = '425' , toTS = toTS + {'425':toTimestamp(now())}  WHERE A = 'zqy';
427(2023-09-01T12:04:36.531000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 428 SET C = '427' , toTS = toTS + {'427':toTimestamp(now())}  WHERE A = 'zqy';
424(2023-09-01T12:04:36.525001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 425 SET C = '424' , toTS = toTS + {'424':toTimestamp(now())}  WHERE A = 'zqy';
428(2023-09-01T12:04:36.532000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 429 SET C = '428' , toTS = toTS + {'428':toTimestamp(now())}  WHERE A = 'zqy';
429(2023-09-01T12:04:36.532000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 430 SET C = '429' , toTS = toTS + {'429':toTimestamp(now())}  WHERE A = 'zqy';
430(2023-09-01T12:04:36.536000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 431 SET C = '430' , toTS = toTS + {'430':toTimestamp(now())}  WHERE A = 'zqy';
431(2023-09-01T12:04:36.539000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 432 SET C = '431' , toTS = toTS + {'431':toTimestamp(now())}  WHERE A = 'zqy';
432(2023-09-01T12:04:36.540000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 433 SET C = '432' , toTS = toTS + {'432':toTimestamp(now())}  WHERE A = 'zqy';
437(2023-09-01T12:04:36.543002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 438 SET C = '437' , toTS = toTS + {'437':toTimestamp(now())}  WHERE A = 'zqy';
438(2023-09-01T12:04:36.545000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 439 SET C = '438' , toTS = toTS + {'438':toTimestamp(now())}  WHERE A = 'zqy';
435(2023-09-01T12:04:36.543000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 436 SET C = '435' , toTS = toTS + {'435':toTimestamp(now())}  WHERE A = 'zqy';
433(2023-09-01T12:04:36.543001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 434 SET C = '433' , toTS = toTS + {'433':toTimestamp(now())}  WHERE A = 'zqy';
434(2023-09-01T12:04:36.542000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 435 SET C = '434' , toTS = toTS + {'434':toTimestamp(now())}  WHERE A = 'zqy';
436(2023-09-01T12:04:36.543001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 437 SET C = '436' , toTS = toTS + {'436':toTimestamp(now())}  WHERE A = 'zqy';
440(2023-09-01T12:04:36.552000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 441 SET C = '440' , toTS = toTS + {'440':toTimestamp(now())}  WHERE A = 'zqy';
439(2023-09-01T12:04:36.549001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 440 SET C = '439' , toTS = toTS + {'439':toTimestamp(now())}  WHERE A = 'zqy';
441(2023-09-01T12:04:36.553000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 442 SET C = '441' , toTS = toTS + {'441':toTimestamp(now())}  WHERE A = 'zqy';
444(2023-09-01T12:04:36.558001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 445 SET C = '444' , toTS = toTS + {'444':toTimestamp(now())}  WHERE A = 'zqy';
447(2023-09-01T12:04:36.561000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 448 SET C = '447' , toTS = toTS + {'447':toTimestamp(now())}  WHERE A = 'zqy';
442(2023-09-01T12:04:36.558000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 443 SET C = '442' , toTS = toTS + {'442':toTimestamp(now())}  WHERE A = 'zqy';
443(2023-09-01T12:04:36.556000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 444 SET C = '443' , toTS = toTS + {'443':toTimestamp(now())}  WHERE A = 'zqy';
445(2023-09-01T12:04:36.559000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 446 SET C = '445' , toTS = toTS + {'445':toTimestamp(now())}  WHERE A = 'zqy';
446(2023-09-01T12:04:36.560001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 447 SET C = '446' , toTS = toTS + {'446':toTimestamp(now())}  WHERE A = 'zqy';
452(2023-09-01T12:04:36.568000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 453 SET C = '452' , toTS = toTS + {'452':toTimestamp(now())}  WHERE A = 'zqy';
450(2023-09-01T12:04:36.569001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 451 SET C = '450' , toTS = toTS + {'450':toTimestamp(now())}  WHERE A = 'zqy';
448(2023-09-01T12:04:36.568001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 449 SET C = '448' , toTS = toTS + {'448':toTimestamp(now())}  WHERE A = 'zqy';
451(2023-09-01T12:04:36.569001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 452 SET C = '451' , toTS = toTS + {'451':toTimestamp(now())}  WHERE A = 'zqy';
449(2023-09-01T12:04:36.569001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 450 SET C = '449' , toTS = toTS + {'449':toTimestamp(now())}  WHERE A = 'zqy';
453(2023-09-01T12:04:36.569002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 454 SET C = '453' , toTS = toTS + {'453':toTimestamp(now())}  WHERE A = 'zqy';
456(2023-09-01T12:04:36.574001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 457 SET C = '456' , toTS = toTS + {'456':toTimestamp(now())}  WHERE A = 'zqy';
458(2023-09-01T12:04:36.578000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 459 SET C = '458' , toTS = toTS + {'458':toTimestamp(now())}  WHERE A = 'zqy';
457(2023-09-01T12:04:36.574001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 458 SET C = '457' , toTS = toTS + {'457':toTimestamp(now())}  WHERE A = 'zqy';
454(2023-09-01T12:04:36.573000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 455 SET C = '454' , toTS = toTS + {'454':toTimestamp(now())}  WHERE A = 'zqy';
455(2023-09-01T12:04:36.574000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 456 SET C = '455' , toTS = toTS + {'455':toTimestamp(now())}  WHERE A = 'zqy';
460(2023-09-01T12:04:36.585001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 461 SET C = '460' , toTS = toTS + {'460':toTimestamp(now())}  WHERE A = 'zqy';
459(2023-09-01T12:04:36.581000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 460 SET C = '459' , toTS = toTS + {'459':toTimestamp(now())}  WHERE A = 'zqy';
464(2023-09-01T12:04:36.587001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 465 SET C = '464' , toTS = toTS + {'464':toTimestamp(now())}  WHERE A = 'zqy';
461(2023-09-01T12:04:36.585001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 462 SET C = '461' , toTS = toTS + {'461':toTimestamp(now())}  WHERE A = 'zqy';
462(2023-09-01T12:04:36.586000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 463 SET C = '462' , toTS = toTS + {'462':toTimestamp(now())}  WHERE A = 'zqy';
463(2023-09-01T12:04:36.587000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 464 SET C = '463' , toTS = toTS + {'463':toTimestamp(now())}  WHERE A = 'zqy';
465(2023-09-01T12:04:36.592000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 466 SET C = '465' , toTS = toTS + {'465':toTimestamp(now())}  WHERE A = 'zqy';
466(2023-09-01T12:04:36.590000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 467 SET C = '466' , toTS = toTS + {'466':toTimestamp(now())}  WHERE A = 'zqy';
467(2023-09-01T12:04:36.593000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 468 SET C = '467' , toTS = toTS + {'467':toTimestamp(now())}  WHERE A = 'zqy';
469(2023-09-01T12:04:36.598000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 470 SET C = '469' , toTS = toTS + {'469':toTimestamp(now())}  WHERE A = 'zqy';
468(2023-09-01T12:04:36.593001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 469 SET C = '468' , toTS = toTS + {'468':toTimestamp(now())}  WHERE A = 'zqy';
472(2023-09-01T12:04:36.605000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 473 SET C = '472' , toTS = toTS + {'472':toTimestamp(now())}  WHERE A = 'zqy';
470(2023-09-01T12:04:36.598001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 471 SET C = '470' , toTS = toTS + {'470':toTimestamp(now())}  WHERE A = 'zqy';
471(2023-09-01T12:04:36.605001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 472 SET C = '471' , toTS = toTS + {'471':toTimestamp(now())}  WHERE A = 'zqy';
473(2023-09-01T12:04:36.606000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 474 SET C = '473' , toTS = toTS + {'473':toTimestamp(now())}  WHERE A = 'zqy';
475(2023-09-01T12:04:36.614000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 476 SET C = '475' , toTS = toTS + {'475':toTimestamp(now())}  WHERE A = 'zqy';
474(2023-09-01T12:04:36.606001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 475 SET C = '474' , toTS = toTS + {'474':toTimestamp(now())}  WHERE A = 'zqy';
477(2023-09-01T12:04:36.621001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 478 SET C = '477' , toTS = toTS + {'477':toTimestamp(now())}  WHERE A = 'zqy';
476(2023-09-01T12:04:36.615001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 477 SET C = '476' , toTS = toTS + {'476':toTimestamp(now())}  WHERE A = 'zqy';
481(2023-09-01T12:04:36.621002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 482 SET C = '481' , toTS = toTS + {'481':toTimestamp(now())}  WHERE A = 'zqy';
480(2023-09-01T12:04:36.622000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 481 SET C = '480' , toTS = toTS + {'480':toTimestamp(now())}  WHERE A = 'zqy';
478(2023-09-01T12:04:36.621001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 479 SET C = '478' , toTS = toTS + {'478':toTimestamp(now())}  WHERE A = 'zqy';
479(2023-09-01T12:04:36.622000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 480 SET C = '479' , toTS = toTS + {'479':toTimestamp(now())}  WHERE A = 'zqy';
484(2023-09-01T12:04:36.631001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 485 SET C = '484' , toTS = toTS + {'484':toTimestamp(now())}  WHERE A = 'zqy';
483(2023-09-01T12:04:36.631001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 484 SET C = '483' , toTS = toTS + {'483':toTimestamp(now())}  WHERE A = 'zqy';
482(2023-09-01T12:04:36.630000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 483 SET C = '482' , toTS = toTS + {'482':toTimestamp(now())}  WHERE A = 'zqy';
489(2023-09-01T12:04:36.642000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 490 SET C = '489' , toTS = toTS + {'489':toTimestamp(now())}  WHERE A = 'zqy';
486(2023-09-01T12:04:36.638001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 487 SET C = '486' , toTS = toTS + {'486':toTimestamp(now())}  WHERE A = 'zqy';
488(2023-09-01T12:04:36.639000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 489 SET C = '488' , toTS = toTS + {'488':toTimestamp(now())}  WHERE A = 'zqy';
487(2023-09-01T12:04:36.638001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 488 SET C = '487' , toTS = toTS + {'487':toTimestamp(now())}  WHERE A = 'zqy';
485(2023-09-01T12:04:36.638000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 486 SET C = '485' , toTS = toTS + {'485':toTimestamp(now())}  WHERE A = 'zqy';
490(2023-09-01T12:04:36.645001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 491 SET C = '490' , toTS = toTS + {'490':toTimestamp(now())}  WHERE A = 'zqy';
492(2023-09-01T12:04:36.650000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 493 SET C = '492' , toTS = toTS + {'492':toTimestamp(now())}  WHERE A = 'zqy';
493(2023-09-01T12:04:36.651000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 494 SET C = '493' , toTS = toTS + {'493':toTimestamp(now())}  WHERE A = 'zqy';
491(2023-09-01T12:04:36.645001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 492 SET C = '491' , toTS = toTS + {'491':toTimestamp(now())}  WHERE A = 'zqy';
494(2023-09-01T12:04:36.652000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 495 SET C = '494' , toTS = toTS + {'494':toTimestamp(now())}  WHERE A = 'zqy';
498(2023-09-01T12:04:36.657001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 499 SET C = '498' , toTS = toTS + {'498':toTimestamp(now())}  WHERE A = 'zqy';
496(2023-09-01T12:04:36.656001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 497 SET C = '496' , toTS = toTS + {'496':toTimestamp(now())}  WHERE A = 'zqy';
495(2023-09-01T12:04:36.655000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 496 SET C = '495' , toTS = toTS + {'495':toTimestamp(now())}  WHERE A = 'zqy';
505(2023-09-01T12:04:36.676001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 506 SET C = '505' , toTS = toTS + {'505':toTimestamp(now())}  WHERE A = 'zqy';
503(2023-09-01T12:04:36.676000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 504 SET C = '503' , toTS = toTS + {'503':toTimestamp(now())}  WHERE A = 'zqy';
497(2023-09-01T12:04:36.676000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 498 SET C = '497' , toTS = toTS + {'497':toTimestamp(now())}  WHERE A = 'zqy';
499(2023-09-01T12:04:36.677000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 500 SET C = '499' , toTS = toTS + {'499':toTimestamp(now())}  WHERE A = 'zqy';
500(2023-09-01T12:04:36.678000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 501 SET C = '500' , toTS = toTS + {'500':toTimestamp(now())}  WHERE A = 'zqy';
504(2023-09-01T12:04:36.678001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 505 SET C = '504' , toTS = toTS + {'504':toTimestamp(now())}  WHERE A = 'zqy';
506(2023-09-01T12:04:36.688000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 507 SET C = '506' , toTS = toTS + {'506':toTimestamp(now())}  WHERE A = 'zqy';
502(2023-09-01T12:04:36.678001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 503 SET C = '502' , toTS = toTS + {'502':toTimestamp(now())}  WHERE A = 'zqy';
501(2023-09-01T12:04:36.677000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 502 SET C = '501' , toTS = toTS + {'501':toTimestamp(now())}  WHERE A = 'zqy';
508(2023-09-01T12:04:36.689001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 509 SET C = '508' , toTS = toTS + {'508':toTimestamp(now())}  WHERE A = 'zqy';
510(2023-09-01T12:04:36.692000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 511 SET C = '510' , toTS = toTS + {'510':toTimestamp(now())}  WHERE A = 'zqy';
511(2023-09-01T12:04:36.695000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 512 SET C = '511' , toTS = toTS + {'511':toTimestamp(now())}  WHERE A = 'zqy';
509(2023-09-01T12:04:36.690000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 510 SET C = '509' , toTS = toTS + {'509':toTimestamp(now())}  WHERE A = 'zqy';
507(2023-09-01T12:04:36.691000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 508 SET C = '507' , toTS = toTS + {'507':toTimestamp(now())}  WHERE A = 'zqy';
512(2023-09-01T12:04:36.696000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 513 SET C = '512' , toTS = toTS + {'512':toTimestamp(now())}  WHERE A = 'zqy';
514(2023-09-01T12:04:36.704000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 515 SET C = '514' , toTS = toTS + {'514':toTimestamp(now())}  WHERE A = 'zqy';
513(2023-09-01T12:04:36.697000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 514 SET C = '513' , toTS = toTS + {'513':toTimestamp(now())}  WHERE A = 'zqy';
517(2023-09-01T12:04:36.707000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 518 SET C = '517' , toTS = toTS + {'517':toTimestamp(now())}  WHERE A = 'zqy';
515(2023-09-01T12:04:36.705001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 516 SET C = '515' , toTS = toTS + {'515':toTimestamp(now())}  WHERE A = 'zqy';
518(2023-09-01T12:04:36.709000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 519 SET C = '518' , toTS = toTS + {'518':toTimestamp(now())}  WHERE A = 'zqy';
516(2023-09-01T12:04:36.706000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 517 SET C = '516' , toTS = toTS + {'516':toTimestamp(now())}  WHERE A = 'zqy';
520(2023-09-01T12:04:36.710000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 521 SET C = '520' , toTS = toTS + {'520':toTimestamp(now())}  WHERE A = 'zqy';
522(2023-09-01T12:04:36.715000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 523 SET C = '522' , toTS = toTS + {'522':toTimestamp(now())}  WHERE A = 'zqy';
521(2023-09-01T12:04:36.710001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 522 SET C = '521' , toTS = toTS + {'521':toTimestamp(now())}  WHERE A = 'zqy';
524(2023-09-01T12:04:36.719000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 525 SET C = '524' , toTS = toTS + {'524':toTimestamp(now())}  WHERE A = 'zqy';
523(2023-09-01T12:04:36.718000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 524 SET C = '523' , toTS = toTS + {'523':toTimestamp(now())}  WHERE A = 'zqy';
519(2023-09-01T12:04:36.710001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 520 SET C = '519' , toTS = toTS + {'519':toTimestamp(now())}  WHERE A = 'zqy';
526(2023-09-01T12:04:36.722001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 527 SET C = '526' , toTS = toTS + {'526':toTimestamp(now())}  WHERE A = 'zqy';
525(2023-09-01T12:04:36.722000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 526 SET C = '525' , toTS = toTS + {'525':toTimestamp(now())}  WHERE A = 'zqy';
527(2023-09-01T12:04:36.723000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 528 SET C = '527' , toTS = toTS + {'527':toTimestamp(now())}  WHERE A = 'zqy';
529(2023-09-01T12:04:36.726001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 530 SET C = '529' , toTS = toTS + {'529':toTimestamp(now())}  WHERE A = 'zqy';
531(2023-09-01T12:04:36.727001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 532 SET C = '531' , toTS = toTS + {'531':toTimestamp(now())}  WHERE A = 'zqy';
528(2023-09-01T12:04:36.726001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 529 SET C = '528' , toTS = toTS + {'528':toTimestamp(now())}  WHERE A = 'zqy';
530(2023-09-01T12:04:36.727000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 531 SET C = '530' , toTS = toTS + {'530':toTimestamp(now())}  WHERE A = 'zqy';
534(2023-09-01T12:04:36.732001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 535 SET C = '534' , toTS = toTS + {'534':toTimestamp(now())}  WHERE A = 'zqy';
532(2023-09-01T12:04:36.732000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 533 SET C = '532' , toTS = toTS + {'532':toTimestamp(now())}  WHERE A = 'zqy';
533(2023-09-01T12:04:36.732001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 534 SET C = '533' , toTS = toTS + {'533':toTimestamp(now())}  WHERE A = 'zqy';
536(2023-09-01T12:04:36.738001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 537 SET C = '536' , toTS = toTS + {'536':toTimestamp(now())}  WHERE A = 'zqy';
538(2023-09-01T12:04:36.739001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 539 SET C = '538' , toTS = toTS + {'538':toTimestamp(now())}  WHERE A = 'zqy';
537(2023-09-01T12:04:36.739000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 538 SET C = '537' , toTS = toTS + {'537':toTimestamp(now())}  WHERE A = 'zqy';
535(2023-09-01T12:04:36.737000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 536 SET C = '535' , toTS = toTS + {'535':toTimestamp(now())}  WHERE A = 'zqy';
540(2023-09-01T12:04:36.743001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 541 SET C = '540' , toTS = toTS + {'540':toTimestamp(now())}  WHERE A = 'zqy';
543(2023-09-01T12:04:36.745000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 544 SET C = '543' , toTS = toTS + {'543':toTimestamp(now())}  WHERE A = 'zqy';
539(2023-09-01T12:04:36.741000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 540 SET C = '539' , toTS = toTS + {'539':toTimestamp(now())}  WHERE A = 'zqy';
545(2023-09-01T12:04:36.748001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 546 SET C = '545' , toTS = toTS + {'545':toTimestamp(now())}  WHERE A = 'zqy';
547(2023-09-01T12:04:36.751000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 548 SET C = '547' , toTS = toTS + {'547':toTimestamp(now())}  WHERE A = 'zqy';
549(2023-09-01T12:04:36.754000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 550 SET C = '549' , toTS = toTS + {'549':toTimestamp(now())}  WHERE A = 'zqy';
542(2023-09-01T12:04:36.744001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 543 SET C = '542' , toTS = toTS + {'542':toTimestamp(now())}  WHERE A = 'zqy';
541(2023-09-01T12:04:36.745000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 542 SET C = '541' , toTS = toTS + {'541':toTimestamp(now())}  WHERE A = 'zqy';
548(2023-09-01T12:04:36.752001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 549 SET C = '548' , toTS = toTS + {'548':toTimestamp(now())}  WHERE A = 'zqy';
546(2023-09-01T12:04:36.752001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 547 SET C = '546' , toTS = toTS + {'546':toTimestamp(now())}  WHERE A = 'zqy';
544(2023-09-01T12:04:36.752000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 545 SET C = '544' , toTS = toTS + {'544':toTimestamp(now())}  WHERE A = 'zqy';
550(2023-09-01T12:04:36.755000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 551 SET C = '550' , toTS = toTS + {'550':toTimestamp(now())}  WHERE A = 'zqy';
551(2023-09-01T12:04:36.760000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 552 SET C = '551' , toTS = toTS + {'551':toTimestamp(now())}  WHERE A = 'zqy';
552(2023-09-01T12:04:36.763000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 553 SET C = '552' , toTS = toTS + {'552':toTimestamp(now())}  WHERE A = 'zqy';
553(2023-09-01T12:04:36.780000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 554 SET C = '553' , toTS = toTS + {'553':toTimestamp(now())}  WHERE A = 'zqy';
558(2023-09-01T12:04:36.782001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 559 SET C = '558' , toTS = toTS + {'558':toTimestamp(now())}  WHERE A = 'zqy';
554(2023-09-01T12:04:36.781001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 555 SET C = '554' , toTS = toTS + {'554':toTimestamp(now())}  WHERE A = 'zqy';
557(2023-09-01T12:04:36.782001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 558 SET C = '557' , toTS = toTS + {'557':toTimestamp(now())}  WHERE A = 'zqy';
555(2023-09-01T12:04:36.781000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 556 SET C = '555' , toTS = toTS + {'555':toTimestamp(now())}  WHERE A = 'zqy';
560(2023-09-01T12:04:36.787000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 561 SET C = '560' , toTS = toTS + {'560':toTimestamp(now())}  WHERE A = 'zqy';
556(2023-09-01T12:04:36.781001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 557 SET C = '556' , toTS = toTS + {'556':toTimestamp(now())}  WHERE A = 'zqy';
559(2023-09-01T12:04:36.786000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 560 SET C = '559' , toTS = toTS + {'559':toTimestamp(now())}  WHERE A = 'zqy';
561(2023-09-01T12:04:36.792000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 562 SET C = '561' , toTS = toTS + {'561':toTimestamp(now())}  WHERE A = 'zqy';
566(2023-09-01T12:04:36.799000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 567 SET C = '566' , toTS = toTS + {'566':toTimestamp(now())}  WHERE A = 'zqy';
563(2023-09-01T12:04:36.796000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 564 SET C = '563' , toTS = toTS + {'563':toTimestamp(now())}  WHERE A = 'zqy';
564(2023-09-01T12:04:36.797000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 565 SET C = '564' , toTS = toTS + {'564':toTimestamp(now())}  WHERE A = 'zqy';
562(2023-09-01T12:04:36.795000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 563 SET C = '562' , toTS = toTS + {'562':toTimestamp(now())}  WHERE A = 'zqy';
567(2023-09-01T12:04:36.800000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 568 SET C = '567' , toTS = toTS + {'567':toTimestamp(now())}  WHERE A = 'zqy';
570(2023-09-01T12:04:36.804001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 571 SET C = '570' , toTS = toTS + {'570':toTimestamp(now())}  WHERE A = 'zqy';
565(2023-09-01T12:04:36.798001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 566 SET C = '565' , toTS = toTS + {'565':toTimestamp(now())}  WHERE A = 'zqy';
569(2023-09-01T12:04:36.804000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 570 SET C = '569' , toTS = toTS + {'569':toTimestamp(now())}  WHERE A = 'zqy';
568(2023-09-01T12:04:36.802000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 569 SET C = '568' , toTS = toTS + {'568':toTimestamp(now())}  WHERE A = 'zqy';
571(2023-09-01T12:04:36.808001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 572 SET C = '571' , toTS = toTS + {'571':toTimestamp(now())}  WHERE A = 'zqy';
573(2023-09-01T12:04:36.813001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 574 SET C = '573' , toTS = toTS + {'573':toTimestamp(now())}  WHERE A = 'zqy';
572(2023-09-01T12:04:36.813000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 573 SET C = '572' , toTS = toTS + {'572':toTimestamp(now())}  WHERE A = 'zqy';
574(2023-09-01T12:04:36.814001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 575 SET C = '574' , toTS = toTS + {'574':toTimestamp(now())}  WHERE A = 'zqy';
575(2023-09-01T12:04:36.814000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 576 SET C = '575' , toTS = toTS + {'575':toTimestamp(now())}  WHERE A = 'zqy';
576(2023-09-01T12:04:36.815000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 577 SET C = '576' , toTS = toTS + {'576':toTimestamp(now())}  WHERE A = 'zqy';
578(2023-09-01T12:04:36.818001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 579 SET C = '578' , toTS = toTS + {'578':toTimestamp(now())}  WHERE A = 'zqy';
580(2023-09-01T12:04:36.820000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 581 SET C = '580' , toTS = toTS + {'580':toTimestamp(now())}  WHERE A = 'zqy';
579(2023-09-01T12:04:36.819000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 580 SET C = '579' , toTS = toTS + {'579':toTimestamp(now())}  WHERE A = 'zqy';
581(2023-09-01T12:04:36.822000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 582 SET C = '581' , toTS = toTS + {'581':toTimestamp(now())}  WHERE A = 'zqy';
577(2023-09-01T12:04:36.818000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 578 SET C = '577' , toTS = toTS + {'577':toTimestamp(now())}  WHERE A = 'zqy';
582(2023-09-01T12:04:36.824000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 583 SET C = '582' , toTS = toTS + {'582':toTimestamp(now())}  WHERE A = 'zqy';
583(2023-09-01T12:04:36.824001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 584 SET C = '583' , toTS = toTS + {'583':toTimestamp(now())}  WHERE A = 'zqy';
584(2023-09-01T12:04:36.826000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 585 SET C = '584' , toTS = toTS + {'584':toTimestamp(now())}  WHERE A = 'zqy';
585(2023-09-01T12:04:36.828000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 586 SET C = '585' , toTS = toTS + {'585':toTimestamp(now())}  WHERE A = 'zqy';
587(2023-09-01T12:04:36.830000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 588 SET C = '587' , toTS = toTS + {'587':toTimestamp(now())}  WHERE A = 'zqy';
586(2023-09-01T12:04:36.828000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 587 SET C = '586' , toTS = toTS + {'586':toTimestamp(now())}  WHERE A = 'zqy';
588(2023-09-01T12:04:36.834000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 589 SET C = '588' , toTS = toTS + {'588':toTimestamp(now())}  WHERE A = 'zqy';
591(2023-09-01T12:04:36.836000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 592 SET C = '591' , toTS = toTS + {'591':toTimestamp(now())}  WHERE A = 'zqy';
589(2023-09-01T12:04:36.835001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 590 SET C = '589' , toTS = toTS + {'589':toTimestamp(now())}  WHERE A = 'zqy';
590(2023-09-01T12:04:36.835001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 591 SET C = '590' , toTS = toTS + {'590':toTimestamp(now())}  WHERE A = 'zqy';
594(2023-09-01T12:04:36.840001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 595 SET C = '594' , toTS = toTS + {'594':toTimestamp(now())}  WHERE A = 'zqy';
592(2023-09-01T12:04:36.839000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 593 SET C = '592' , toTS = toTS + {'592':toTimestamp(now())}  WHERE A = 'zqy';
593(2023-09-01T12:04:36.840000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 594 SET C = '593' , toTS = toTS + {'593':toTimestamp(now())}  WHERE A = 'zqy';
596(2023-09-01T12:04:36.843001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 597 SET C = '596' , toTS = toTS + {'596':toTimestamp(now())}  WHERE A = 'zqy';
595(2023-09-01T12:04:36.843000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 596 SET C = '595' , toTS = toTS + {'595':toTimestamp(now())}  WHERE A = 'zqy';
597(2023-09-01T12:04:36.844000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 598 SET C = '597' , toTS = toTS + {'597':toTimestamp(now())}  WHERE A = 'zqy';
598(2023-09-01T12:04:36.847000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 599 SET C = '598' , toTS = toTS + {'598':toTimestamp(now())}  WHERE A = 'zqy';
600(2023-09-01T12:04:36.848001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 601 SET C = '600' , toTS = toTS + {'600':toTimestamp(now())}  WHERE A = 'zqy';
601(2023-09-01T12:04:36.848001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 602 SET C = '601' , toTS = toTS + {'601':toTimestamp(now())}  WHERE A = 'zqy';
599(2023-09-01T12:04:36.848000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 600 SET C = '599' , toTS = toTS + {'599':toTimestamp(now())}  WHERE A = 'zqy';
603(2023-09-01T12:04:36.852001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 604 SET C = '603' , toTS = toTS + {'603':toTimestamp(now())}  WHERE A = 'zqy';
602(2023-09-01T12:04:36.851000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 603 SET C = '602' , toTS = toTS + {'602':toTimestamp(now())}  WHERE A = 'zqy';
604(2023-09-01T12:04:36.852001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 605 SET C = '604' , toTS = toTS + {'604':toTimestamp(now())}  WHERE A = 'zqy';
605(2023-09-01T12:04:36.856001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 606 SET C = '605' , toTS = toTS + {'605':toTimestamp(now())}  WHERE A = 'zqy';
606(2023-09-01T12:04:36.858000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 607 SET C = '606' , toTS = toTS + {'606':toTimestamp(now())}  WHERE A = 'zqy';
609(2023-09-01T12:04:36.860000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 610 SET C = '609' , toTS = toTS + {'609':toTimestamp(now())}  WHERE A = 'zqy';
607(2023-09-01T12:04:36.857000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 608 SET C = '607' , toTS = toTS + {'607':toTimestamp(now())}  WHERE A = 'zqy';
616(2023-09-01T12:04:36.868001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 617 SET C = '616' , toTS = toTS + {'616':toTimestamp(now())}  WHERE A = 'zqy';
610(2023-09-01T12:04:36.860001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 611 SET C = '610' , toTS = toTS + {'610':toTimestamp(now())}  WHERE A = 'zqy';
608(2023-09-01T12:04:36.859000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 609 SET C = '608' , toTS = toTS + {'608':toTimestamp(now())}  WHERE A = 'zqy';
618(2023-09-01T12:04:36.869000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 619 SET C = '618' , toTS = toTS + {'618':toTimestamp(now())}  WHERE A = 'zqy';
611(2023-09-01T12:04:36.862000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 612 SET C = '611' , toTS = toTS + {'611':toTimestamp(now())}  WHERE A = 'zqy';
612(2023-09-01T12:04:36.866000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 613 SET C = '612' , toTS = toTS + {'612':toTimestamp(now())}  WHERE A = 'zqy';
615(2023-09-01T12:04:36.868001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 616 SET C = '615' , toTS = toTS + {'615':toTimestamp(now())}  WHERE A = 'zqy';
613(2023-09-01T12:04:36.866001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 614 SET C = '613' , toTS = toTS + {'613':toTimestamp(now())}  WHERE A = 'zqy';
619(2023-09-01T12:04:36.873001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 620 SET C = '619' , toTS = toTS + {'619':toTimestamp(now())}  WHERE A = 'zqy';
614(2023-09-01T12:04:36.874000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 615 SET C = '614' , toTS = toTS + {'614':toTimestamp(now())}  WHERE A = 'zqy';
622(2023-09-01T12:04:36.883000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 623 SET C = '622' , toTS = toTS + {'622':toTimestamp(now())}  WHERE A = 'zqy';
617(2023-09-01T12:04:36.869001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 618 SET C = '617' , toTS = toTS + {'617':toTimestamp(now())}  WHERE A = 'zqy';
620(2023-09-01T12:04:36.876000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 621 SET C = '620' , toTS = toTS + {'620':toTimestamp(now())}  WHERE A = 'zqy';
623(2023-09-01T12:04:36.883001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 624 SET C = '623' , toTS = toTS + {'623':toTimestamp(now())}  WHERE A = 'zqy';
624(2023-09-01T12:04:36.882000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 625 SET C = '624' , toTS = toTS + {'624':toTimestamp(now())}  WHERE A = 'zqy';
621(2023-09-01T12:04:36.877000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 622 SET C = '621' , toTS = toTS + {'621':toTimestamp(now())}  WHERE A = 'zqy';
626(2023-09-01T12:04:36.885000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 627 SET C = '626' , toTS = toTS + {'626':toTimestamp(now())}  WHERE A = 'zqy';
627(2023-09-01T12:04:36.886001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 628 SET C = '627' , toTS = toTS + {'627':toTimestamp(now())}  WHERE A = 'zqy';
625(2023-09-01T12:04:36.884000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 626 SET C = '625' , toTS = toTS + {'625':toTimestamp(now())}  WHERE A = 'zqy';
628(2023-09-01T12:04:36.886001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 629 SET C = '628' , toTS = toTS + {'628':toTimestamp(now())}  WHERE A = 'zqy';
630(2023-09-01T12:04:36.893001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 631 SET C = '630' , toTS = toTS + {'630':toTimestamp(now())}  WHERE A = 'zqy';
631(2023-09-01T12:04:36.893000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 632 SET C = '631' , toTS = toTS + {'631':toTimestamp(now())}  WHERE A = 'zqy';
633(2023-09-01T12:04:36.895000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 634 SET C = '633' , toTS = toTS + {'633':toTimestamp(now())}  WHERE A = 'zqy';
629(2023-09-01T12:04:36.892000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 630 SET C = '629' , toTS = toTS + {'629':toTimestamp(now())}  WHERE A = 'zqy';
632(2023-09-01T12:04:36.895000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 633 SET C = '632' , toTS = toTS + {'632':toTimestamp(now())}  WHERE A = 'zqy';
636(2023-09-01T12:04:36.898001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 637 SET C = '636' , toTS = toTS + {'636':toTimestamp(now())}  WHERE A = 'zqy';
634(2023-09-01T12:04:36.896000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 635 SET C = '634' , toTS = toTS + {'634':toTimestamp(now())}  WHERE A = 'zqy';
635(2023-09-01T12:04:36.898001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 636 SET C = '635' , toTS = toTS + {'635':toTimestamp(now())}  WHERE A = 'zqy';
637(2023-09-01T12:04:36.900000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 638 SET C = '637' , toTS = toTS + {'637':toTimestamp(now())}  WHERE A = 'zqy';
639(2023-09-01T12:04:36.904000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 640 SET C = '639' , toTS = toTS + {'639':toTimestamp(now())}  WHERE A = 'zqy';
638(2023-09-01T12:04:36.901000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 639 SET C = '638' , toTS = toTS + {'638':toTimestamp(now())}  WHERE A = 'zqy';
642(2023-09-01T12:04:36.906001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 643 SET C = '642' , toTS = toTS + {'642':toTimestamp(now())}  WHERE A = 'zqy';
643(2023-09-01T12:04:36.908000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 644 SET C = '643' , toTS = toTS + {'643':toTimestamp(now())}  WHERE A = 'zqy';
640(2023-09-01T12:04:36.905000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 641 SET C = '640' , toTS = toTS + {'640':toTimestamp(now())}  WHERE A = 'zqy';
644(2023-09-01T12:04:36.909001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 645 SET C = '644' , toTS = toTS + {'644':toTimestamp(now())}  WHERE A = 'zqy';
646(2023-09-01T12:04:36.910000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 647 SET C = '646' , toTS = toTS + {'646':toTimestamp(now())}  WHERE A = 'zqy';
645(2023-09-01T12:04:36.910001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 646 SET C = '645' , toTS = toTS + {'645':toTimestamp(now())}  WHERE A = 'zqy';
641(2023-09-01T12:04:36.904001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 642 SET C = '641' , toTS = toTS + {'641':toTimestamp(now())}  WHERE A = 'zqy';
649(2023-09-01T12:04:36.915001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 650 SET C = '649' , toTS = toTS + {'649':toTimestamp(now())}  WHERE A = 'zqy';
648(2023-09-01T12:04:36.915001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 649 SET C = '648' , toTS = toTS + {'648':toTimestamp(now())}  WHERE A = 'zqy';
647(2023-09-01T12:04:36.915001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 648 SET C = '647' , toTS = toTS + {'647':toTimestamp(now())}  WHERE A = 'zqy';
652(2023-09-01T12:04:36.920000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 653 SET C = '652' , toTS = toTS + {'652':toTimestamp(now())}  WHERE A = 'zqy';
650(2023-09-01T12:04:36.918000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 651 SET C = '650' , toTS = toTS + {'650':toTimestamp(now())}  WHERE A = 'zqy';
653(2023-09-01T12:04:36.922000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 654 SET C = '653' , toTS = toTS + {'653':toTimestamp(now())}  WHERE A = 'zqy';
651(2023-09-01T12:04:36.919000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 652 SET C = '651' , toTS = toTS + {'651':toTimestamp(now())}  WHERE A = 'zqy';
657(2023-09-01T12:04:36.925000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 658 SET C = '657' , toTS = toTS + {'657':toTimestamp(now())}  WHERE A = 'zqy';
656(2023-09-01T12:04:36.926001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 657 SET C = '656' , toTS = toTS + {'656':toTimestamp(now())}  WHERE A = 'zqy';
654(2023-09-01T12:04:36.923001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 655 SET C = '654' , toTS = toTS + {'654':toTimestamp(now())}  WHERE A = 'zqy';
655(2023-09-01T12:04:36.924000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 656 SET C = '655' , toTS = toTS + {'655':toTimestamp(now())}  WHERE A = 'zqy';
658(2023-09-01T12:04:36.929001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 659 SET C = '658' , toTS = toTS + {'658':toTimestamp(now())}  WHERE A = 'zqy';
661(2023-09-01T12:04:36.932000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 662 SET C = '661' , toTS = toTS + {'661':toTimestamp(now())}  WHERE A = 'zqy';
660(2023-09-01T12:04:36.929001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 661 SET C = '660' , toTS = toTS + {'660':toTimestamp(now())}  WHERE A = 'zqy';
659(2023-09-01T12:04:36.929001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 660 SET C = '659' , toTS = toTS + {'659':toTimestamp(now())}  WHERE A = 'zqy';
663(2023-09-01T12:04:36.935001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 664 SET C = '663' , toTS = toTS + {'663':toTimestamp(now())}  WHERE A = 'zqy';
662(2023-09-01T12:04:36.934000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 663 SET C = '662' , toTS = toTS + {'662':toTimestamp(now())}  WHERE A = 'zqy';
664(2023-09-01T12:04:36.939000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 665 SET C = '664' , toTS = toTS + {'664':toTimestamp(now())}  WHERE A = 'zqy';
665(2023-09-01T12:04:36.941002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 666 SET C = '665' , toTS = toTS + {'665':toTimestamp(now())}  WHERE A = 'zqy';
666(2023-09-01T12:04:36.941001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 667 SET C = '666' , toTS = toTS + {'666':toTimestamp(now())}  WHERE A = 'zqy';
671(2023-09-01T12:04:36.945001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 672 SET C = '671' , toTS = toTS + {'671':toTimestamp(now())}  WHERE A = 'zqy';
667(2023-09-01T12:04:36.940000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 668 SET C = '667' , toTS = toTS + {'667':toTimestamp(now())}  WHERE A = 'zqy';
668(2023-09-01T12:04:36.941001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 669 SET C = '668' , toTS = toTS + {'668':toTimestamp(now())}  WHERE A = 'zqy';
672(2023-09-01T12:04:36.945000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 673 SET C = '672' , toTS = toTS + {'672':toTimestamp(now())}  WHERE A = 'zqy';
670(2023-09-01T12:04:36.944000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 671 SET C = '670' , toTS = toTS + {'670':toTimestamp(now())}  WHERE A = 'zqy';
669(2023-09-01T12:04:36.944000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 670 SET C = '669' , toTS = toTS + {'669':toTimestamp(now())}  WHERE A = 'zqy';
673(2023-09-01T12:04:36.948000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 674 SET C = '673' , toTS = toTS + {'673':toTimestamp(now())}  WHERE A = 'zqy';
674(2023-09-01T12:04:36.951000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 675 SET C = '674' , toTS = toTS + {'674':toTimestamp(now())}  WHERE A = 'zqy';
678(2023-09-01T12:04:36.955000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 679 SET C = '678' , toTS = toTS + {'678':toTimestamp(now())}  WHERE A = 'zqy';
677(2023-09-01T12:04:36.954000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 678 SET C = '677' , toTS = toTS + {'677':toTimestamp(now())}  WHERE A = 'zqy';
680(2023-09-01T12:04:36.956000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 681 SET C = '680' , toTS = toTS + {'680':toTimestamp(now())}  WHERE A = 'zqy';
675(2023-09-01T12:04:36.953001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 676 SET C = '675' , toTS = toTS + {'675':toTimestamp(now())}  WHERE A = 'zqy';
676(2023-09-01T12:04:36.952000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 677 SET C = '676' , toTS = toTS + {'676':toTimestamp(now())}  WHERE A = 'zqy';
679(2023-09-01T12:04:36.956000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 680 SET C = '679' , toTS = toTS + {'679':toTimestamp(now())}  WHERE A = 'zqy';
682(2023-09-01T12:04:36.957000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 683 SET C = '682' , toTS = toTS + {'682':toTimestamp(now())}  WHERE A = 'zqy';
681(2023-09-01T12:04:36.958001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 682 SET C = '681' , toTS = toTS + {'681':toTimestamp(now())}  WHERE A = 'zqy';
683(2023-09-01T12:04:36.962000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 684 SET C = '683' , toTS = toTS + {'683':toTimestamp(now())}  WHERE A = 'zqy';
684(2023-09-01T12:04:36.963000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 685 SET C = '684' , toTS = toTS + {'684':toTimestamp(now())}  WHERE A = 'zqy';
687(2023-09-01T12:04:36.964000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 688 SET C = '687' , toTS = toTS + {'687':toTimestamp(now())}  WHERE A = 'zqy';
685(2023-09-01T12:04:36.964001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 686 SET C = '685' , toTS = toTS + {'685':toTimestamp(now())}  WHERE A = 'zqy';
688(2023-09-01T12:04:36.967000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 689 SET C = '688' , toTS = toTS + {'688':toTimestamp(now())}  WHERE A = 'zqy';
689(2023-09-01T12:04:36.969000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 690 SET C = '689' , toTS = toTS + {'689':toTimestamp(now())}  WHERE A = 'zqy';
686(2023-09-01T12:04:36.966001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 687 SET C = '686' , toTS = toTS + {'686':toTimestamp(now())}  WHERE A = 'zqy';
690(2023-09-01T12:04:36.969001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 691 SET C = '690' , toTS = toTS + {'690':toTimestamp(now())}  WHERE A = 'zqy';
691(2023-09-01T12:04:36.970001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 692 SET C = '691' , toTS = toTS + {'691':toTimestamp(now())}  WHERE A = 'zqy';
692(2023-09-01T12:04:36.970000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 693 SET C = '692' , toTS = toTS + {'692':toTimestamp(now())}  WHERE A = 'zqy';
697(2023-09-01T12:04:36.977001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 698 SET C = '697' , toTS = toTS + {'697':toTimestamp(now())}  WHERE A = 'zqy';
695(2023-09-01T12:04:36.975000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 696 SET C = '695' , toTS = toTS + {'695':toTimestamp(now())}  WHERE A = 'zqy';
694(2023-09-01T12:04:36.975000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 695 SET C = '694' , toTS = toTS + {'694':toTimestamp(now())}  WHERE A = 'zqy';
699(2023-09-01T12:04:36.980000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 700 SET C = '699' , toTS = toTS + {'699':toTimestamp(now())}  WHERE A = 'zqy';
693(2023-09-01T12:04:36.974000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 694 SET C = '693' , toTS = toTS + {'693':toTimestamp(now())}  WHERE A = 'zqy';
698(2023-09-01T12:04:36.980000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 699 SET C = '698' , toTS = toTS + {'698':toTimestamp(now())}  WHERE A = 'zqy';
696(2023-09-01T12:04:36.977000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 697 SET C = '696' , toTS = toTS + {'696':toTimestamp(now())}  WHERE A = 'zqy';
700(2023-09-01T12:04:36.983000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 701 SET C = '700' , toTS = toTS + {'700':toTimestamp(now())}  WHERE A = 'zqy';
702(2023-09-01T12:04:36.986001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 703 SET C = '702' , toTS = toTS + {'702':toTimestamp(now())}  WHERE A = 'zqy';
703(2023-09-01T12:04:36.991000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 704 SET C = '703' , toTS = toTS + {'703':toTimestamp(now())}  WHERE A = 'zqy';
704(2023-09-01T12:04:36.992001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 705 SET C = '704' , toTS = toTS + {'704':toTimestamp(now())}  WHERE A = 'zqy';
708(2023-09-01T12:04:36.992001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 709 SET C = '708' , toTS = toTS + {'708':toTimestamp(now())}  WHERE A = 'zqy';
706(2023-09-01T12:04:36.993001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 707 SET C = '706' , toTS = toTS + {'706':toTimestamp(now())}  WHERE A = 'zqy';
705(2023-09-01T12:04:36.991001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 706 SET C = '705' , toTS = toTS + {'705':toTimestamp(now())}  WHERE A = 'zqy';
710(2023-09-01T12:04:36.994001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 711 SET C = '710' , toTS = toTS + {'710':toTimestamp(now())}  WHERE A = 'zqy';
701(2023-09-01T12:04:36.986000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 702 SET C = '701' , toTS = toTS + {'701':toTimestamp(now())}  WHERE A = 'zqy';
709(2023-09-01T12:04:36.994000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 710 SET C = '709' , toTS = toTS + {'709':toTimestamp(now())}  WHERE A = 'zqy';
707(2023-09-01T12:04:36.993001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 708 SET C = '707' , toTS = toTS + {'707':toTimestamp(now())}  WHERE A = 'zqy';
711(2023-09-01T12:04:37.001000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 712 SET C = '711' , toTS = toTS + {'711':toTimestamp(now())}  WHERE A = 'zqy';
712(2023-09-01T12:04:37.002000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 713 SET C = '712' , toTS = toTS + {'712':toTimestamp(now())}  WHERE A = 'zqy';
714(2023-09-01T12:04:37.003000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 715 SET C = '714' , toTS = toTS + {'714':toTimestamp(now())}  WHERE A = 'zqy';
715(2023-09-01T12:04:37.004000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 716 SET C = '715' , toTS = toTS + {'715':toTimestamp(now())}  WHERE A = 'zqy';
719(2023-09-01T12:04:37.008000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 720 SET C = '719' , toTS = toTS + {'719':toTimestamp(now())}  WHERE A = 'zqy';
717(2023-09-01T12:04:37.007001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 718 SET C = '717' , toTS = toTS + {'717':toTimestamp(now())}  WHERE A = 'zqy';
713(2023-09-01T12:04:37.006001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 714 SET C = '713' , toTS = toTS + {'713':toTimestamp(now())}  WHERE A = 'zqy';
722(2023-09-01T12:04:37.014000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 723 SET C = '722' , toTS = toTS + {'722':toTimestamp(now())}  WHERE A = 'zqy';
720(2023-09-01T12:04:37.010000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 721 SET C = '720' , toTS = toTS + {'720':toTimestamp(now())}  WHERE A = 'zqy';
723(2023-09-01T12:04:37.016000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 724 SET C = '723' , toTS = toTS + {'723':toTimestamp(now())}  WHERE A = 'zqy';
718(2023-09-01T12:04:37.008001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 719 SET C = '718' , toTS = toTS + {'718':toTimestamp(now())}  WHERE A = 'zqy';
716(2023-09-01T12:04:37.007000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 717 SET C = '716' , toTS = toTS + {'716':toTimestamp(now())}  WHERE A = 'zqy';
727(2023-09-01T12:04:37.019001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 728 SET C = '727' , toTS = toTS + {'727':toTimestamp(now())}  WHERE A = 'zqy';
721(2023-09-01T12:04:37.015000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 722 SET C = '721' , toTS = toTS + {'721':toTimestamp(now())}  WHERE A = 'zqy';
724(2023-09-01T12:04:37.015001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 725 SET C = '724' , toTS = toTS + {'724':toTimestamp(now())}  WHERE A = 'zqy';
725(2023-09-01T12:04:37.019000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 726 SET C = '725' , toTS = toTS + {'725':toTimestamp(now())}  WHERE A = 'zqy';
726(2023-09-01T12:04:37.020000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 727 SET C = '726' , toTS = toTS + {'726':toTimestamp(now())}  WHERE A = 'zqy';
728(2023-09-01T12:04:37.025000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 729 SET C = '728' , toTS = toTS + {'728':toTimestamp(now())}  WHERE A = 'zqy';
732(2023-09-01T12:04:37.029000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 733 SET C = '732' , toTS = toTS + {'732':toTimestamp(now())}  WHERE A = 'zqy';
733(2023-09-01T12:04:37.031000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 734 SET C = '733' , toTS = toTS + {'733':toTimestamp(now())}  WHERE A = 'zqy';
730(2023-09-01T12:04:37.029001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 731 SET C = '730' , toTS = toTS + {'730':toTimestamp(now())}  WHERE A = 'zqy';
731(2023-09-01T12:04:37.029001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 732 SET C = '731' , toTS = toTS + {'731':toTimestamp(now())}  WHERE A = 'zqy';
734(2023-09-01T12:04:37.030001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 735 SET C = '734' , toTS = toTS + {'734':toTimestamp(now())}  WHERE A = 'zqy';
729(2023-09-01T12:04:37.026000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 730 SET C = '729' , toTS = toTS + {'729':toTimestamp(now())}  WHERE A = 'zqy';
737(2023-09-01T12:04:37.035001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 738 SET C = '737' , toTS = toTS + {'737':toTimestamp(now())}  WHERE A = 'zqy';
735(2023-09-01T12:04:37.030001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 736 SET C = '735' , toTS = toTS + {'735':toTimestamp(now())}  WHERE A = 'zqy';
736(2023-09-01T12:04:37.036000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 737 SET C = '736' , toTS = toTS + {'736':toTimestamp(now())}  WHERE A = 'zqy';
738(2023-09-01T12:04:37.040000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 739 SET C = '738' , toTS = toTS + {'738':toTimestamp(now())}  WHERE A = 'zqy';
744(2023-09-01T12:04:37.046002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 745 SET C = '744' , toTS = toTS + {'744':toTimestamp(now())}  WHERE A = 'zqy';
739(2023-09-01T12:04:37.043000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 740 SET C = '739' , toTS = toTS + {'739':toTimestamp(now())}  WHERE A = 'zqy';
742(2023-09-01T12:04:37.046000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 743 SET C = '742' , toTS = toTS + {'742':toTimestamp(now())}  WHERE A = 'zqy';
740(2023-09-01T12:04:37.045001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 741 SET C = '740' , toTS = toTS + {'740':toTimestamp(now())}  WHERE A = 'zqy';
745(2023-09-01T12:04:37.046002) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 746 SET C = '745' , toTS = toTS + {'745':toTimestamp(now())}  WHERE A = 'zqy';
746(2023-09-01T12:04:37.049001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 747 SET C = '746' , toTS = toTS + {'746':toTimestamp(now())}  WHERE A = 'zqy';
741(2023-09-01T12:04:37.045000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 742 SET C = '741' , toTS = toTS + {'741':toTimestamp(now())}  WHERE A = 'zqy';
743(2023-09-01T12:04:37.046000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 744 SET C = '743' , toTS = toTS + {'743':toTimestamp(now())}  WHERE A = 'zqy';
751(2023-09-01T12:04:37.057001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 752 SET C = '751' , toTS = toTS + {'751':toTimestamp(now())}  WHERE A = 'zqy';
748(2023-09-01T12:04:37.054000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 749 SET C = '748' , toTS = toTS + {'748':toTimestamp(now())}  WHERE A = 'zqy';
749(2023-09-01T12:04:37.056001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 750 SET C = '749' , toTS = toTS + {'749':toTimestamp(now())}  WHERE A = 'zqy';
747(2023-09-01T12:04:37.051000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 748 SET C = '747' , toTS = toTS + {'747':toTimestamp(now())}  WHERE A = 'zqy';
754(2023-09-01T12:04:37.059001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 755 SET C = '754' , toTS = toTS + {'754':toTimestamp(now())}  WHERE A = 'zqy';
752(2023-09-01T12:04:37.060000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 753 SET C = '752' , toTS = toTS + {'752':toTimestamp(now())}  WHERE A = 'zqy';
750(2023-09-01T12:04:37.055000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 751 SET C = '750' , toTS = toTS + {'750':toTimestamp(now())}  WHERE A = 'zqy';
755(2023-09-01T12:04:37.063001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 756 SET C = '755' , toTS = toTS + {'755':toTimestamp(now())}  WHERE A = 'zqy';
756(2023-09-01T12:04:37.064000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 757 SET C = '756' , toTS = toTS + {'756':toTimestamp(now())}  WHERE A = 'zqy';
759(2023-09-01T12:04:37.067001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 760 SET C = '759' , toTS = toTS + {'759':toTimestamp(now())}  WHERE A = 'zqy';
762(2023-09-01T12:04:37.072000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 763 SET C = '762' , toTS = toTS + {'762':toTimestamp(now())}  WHERE A = 'zqy';
765(2023-09-01T12:04:37.075001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 766 SET C = '765' , toTS = toTS + {'765':toTimestamp(now())}  WHERE A = 'zqy';
760(2023-09-01T12:04:37.068001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 761 SET C = '760' , toTS = toTS + {'760':toTimestamp(now())}  WHERE A = 'zqy';
763(2023-09-01T12:04:37.075000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 764 SET C = '763' , toTS = toTS + {'763':toTimestamp(now())}  WHERE A = 'zqy';
758(2023-09-01T12:04:37.068000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 759 SET C = '758' , toTS = toTS + {'758':toTimestamp(now())}  WHERE A = 'zqy';
753(2023-09-01T12:04:37.059000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 754 SET C = '753' , toTS = toTS + {'753':toTimestamp(now())}  WHERE A = 'zqy';
757(2023-09-01T12:04:37.067000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 758 SET C = '757' , toTS = toTS + {'757':toTimestamp(now())}  WHERE A = 'zqy';
767(2023-09-01T12:04:37.083000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 768 SET C = '767' , toTS = toTS + {'767':toTimestamp(now())}  WHERE A = 'zqy';
761(2023-09-01T12:04:37.070000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 762 SET C = '761' , toTS = toTS + {'761':toTimestamp(now())}  WHERE A = 'zqy';
771(2023-09-01T12:04:37.090001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 772 SET C = '771' , toTS = toTS + {'771':toTimestamp(now())}  WHERE A = 'zqy';
769(2023-09-01T12:04:37.089001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 770 SET C = '769' , toTS = toTS + {'769':toTimestamp(now())}  WHERE A = 'zqy';
774(2023-09-01T12:04:37.092000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 775 SET C = '774' , toTS = toTS + {'774':toTimestamp(now())}  WHERE A = 'zqy';
766(2023-09-01T12:04:37.079000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 767 SET C = '766' , toTS = toTS + {'766':toTimestamp(now())}  WHERE A = 'zqy';
768(2023-09-01T12:04:37.089000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 769 SET C = '768' , toTS = toTS + {'768':toTimestamp(now())}  WHERE A = 'zqy';
764(2023-09-01T12:04:37.075001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 765 SET C = '764' , toTS = toTS + {'764':toTimestamp(now())}  WHERE A = 'zqy';
770(2023-09-01T12:04:37.090000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 771 SET C = '770' , toTS = toTS + {'770':toTimestamp(now())}  WHERE A = 'zqy';
772(2023-09-01T12:04:37.090000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 773 SET C = '772' , toTS = toTS + {'772':toTimestamp(now())}  WHERE A = 'zqy';
773(2023-09-01T12:04:37.097000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 774 SET C = '773' , toTS = toTS + {'773':toTimestamp(now())}  WHERE A = 'zqy';
775(2023-09-01T12:04:37.100000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 776 SET C = '775' , toTS = toTS + {'775':toTimestamp(now())}  WHERE A = 'zqy';
776(2023-09-01T12:04:37.100000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 777 SET C = '776' , toTS = toTS + {'776':toTimestamp(now())}  WHERE A = 'zqy';
777(2023-09-01T12:04:37.101000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 778 SET C = '777' , toTS = toTS + {'777':toTimestamp(now())}  WHERE A = 'zqy';
778(2023-09-01T12:04:37.103000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 779 SET C = '778' , toTS = toTS + {'778':toTimestamp(now())}  WHERE A = 'zqy';
780(2023-09-01T12:04:37.103001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 781 SET C = '780' , toTS = toTS + {'780':toTimestamp(now())}  WHERE A = 'zqy';
779(2023-09-01T12:04:37.106001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 780 SET C = '779' , toTS = toTS + {'779':toTimestamp(now())}  WHERE A = 'zqy';
782(2023-09-01T12:04:37.108001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 783 SET C = '782' , toTS = toTS + {'782':toTimestamp(now())}  WHERE A = 'zqy';
785(2023-09-01T12:04:37.113001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 786 SET C = '785' , toTS = toTS + {'785':toTimestamp(now())}  WHERE A = 'zqy';
783(2023-09-01T12:04:37.113000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 784 SET C = '783' , toTS = toTS + {'783':toTimestamp(now())}  WHERE A = 'zqy';
784(2023-09-01T12:04:37.114001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 785 SET C = '784' , toTS = toTS + {'784':toTimestamp(now())}  WHERE A = 'zqy';
786(2023-09-01T12:04:37.114000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 787 SET C = '786' , toTS = toTS + {'786':toTimestamp(now())}  WHERE A = 'zqy';
790(2023-09-01T12:04:37.118001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 791 SET C = '790' , toTS = toTS + {'790':toTimestamp(now())}  WHERE A = 'zqy';
781(2023-09-01T12:04:37.108000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 782 SET C = '781' , toTS = toTS + {'781':toTimestamp(now())}  WHERE A = 'zqy';
789(2023-09-01T12:04:37.119000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 790 SET C = '789' , toTS = toTS + {'789':toTimestamp(now())}  WHERE A = 'zqy';
791(2023-09-01T12:04:37.122000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 792 SET C = '791' , toTS = toTS + {'791':toTimestamp(now())}  WHERE A = 'zqy';
788(2023-09-01T12:04:37.118001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 789 SET C = '788' , toTS = toTS + {'788':toTimestamp(now())}  WHERE A = 'zqy';
787(2023-09-01T12:04:37.117001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 788 SET C = '787' , toTS = toTS + {'787':toTimestamp(now())}  WHERE A = 'zqy';
792(2023-09-01T12:04:37.127001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 793 SET C = '792' , toTS = toTS + {'792':toTimestamp(now())}  WHERE A = 'zqy';
794(2023-09-01T12:04:37.127000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 795 SET C = '794' , toTS = toTS + {'794':toTimestamp(now())}  WHERE A = 'zqy';
793(2023-09-01T12:04:37.130001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 794 SET C = '793' , toTS = toTS + {'793':toTimestamp(now())}  WHERE A = 'zqy';
795(2023-09-01T12:04:37.130000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 796 SET C = '795' , toTS = toTS + {'795':toTimestamp(now())}  WHERE A = 'zqy';
796(2023-09-01T12:04:37.131000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 797 SET C = '796' , toTS = toTS + {'796':toTimestamp(now())}  WHERE A = 'zqy';
797(2023-09-01T12:04:37.131001) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 798 SET C = '797' , toTS = toTS + {'797':toTimestamp(now())}  WHERE A = 'zqy';
798(2023-09-01T12:04:37.135000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 799 SET C = '798' , toTS = toTS + {'798':toTimestamp(now())}  WHERE A = 'zqy';
799(2023-09-01T12:04:37.135000) QUERY: Parsing UPDATE amit.barak USING TIMESTAMP 800 SET C = '799' , toTS = toTS + {'799':toTimestamp(now())}  WHERE A = 'zqy';
===============queries did not added to barak memtables===============
217
241
======================================================================
dict sorted by query time:
{'0': '2023-09-01T12:04:35.754000', '1': '2023-09-01T12:04:35.755000', '2': '2023-09-01T12:04:35.755000', '5': '2023-09-01T12:04:35.757001', '3': '2023-09-01T12:04:35.759001', '4': '2023-09-01T12:04:35.760000', '8': '2023-09-01T12:04:35.760001', '6': '2023-09-01T12:04:35.763000', '7': '2023-09-01T12:04:35.763001', '10': '2023-09-01T12:04:35.774000', '9': '2023-09-01T12:04:35.776000', '11': '2023-09-01T12:04:35.777000', '12': '2023-09-01T12:04:35.779000', '14': '2023-09-01T12:04:35.780000', '13': '2023-09-01T12:04:35.783001', '15': '2023-09-01T12:04:35.787000', '16': '2023-09-01T12:04:35.789000', '18': '2023-09-01T12:04:35.790001', '17': '2023-09-01T12:04:35.794000', '19': '2023-09-01T12:04:35.797000', '21': '2023-09-01T12:04:35.797000', '20': '2023-09-01T12:04:35.801000', '26': '2023-09-01T12:04:35.805001', '22': '2023-09-01T12:04:35.806000', '23': '2023-09-01T12:04:35.807000', '25': '2023-09-01T12:04:35.808000', '24': '2023-09-01T12:04:35.809000', '27': '2023-09-01T12:04:35.810001', '28': '2023-09-01T12:04:35.811001', '29': '2023-09-01T12:04:35.817000', '30': '2023-09-01T12:04:35.818000', '31': '2023-09-01T12:04:35.818001', '32': '2023-09-01T12:04:35.820000', '34': '2023-09-01T12:04:35.821000', '33': '2023-09-01T12:04:35.824000', '35': '2023-09-01T12:04:35.828000', '36': '2023-09-01T12:04:35.828000', '37': '2023-09-01T12:04:35.831000', '38': '2023-09-01T12:04:35.834000', '39': '2023-09-01T12:04:35.835000', '41': '2023-09-01T12:04:35.841000', '42': '2023-09-01T12:04:35.841001', '40': '2023-09-01T12:04:35.842000', '43': '2023-09-01T12:04:35.844000', '45': '2023-09-01T12:04:35.845000', '44': '2023-09-01T12:04:35.846000', '46': '2023-09-01T12:04:35.849000', '47': '2023-09-01T12:04:35.850001', '48': '2023-09-01T12:04:35.853000', '50': '2023-09-01T12:04:35.856001', '53': '2023-09-01T12:04:35.857000', '51': '2023-09-01T12:04:35.858000', '49': '2023-09-01T12:04:35.860000', '52': '2023-09-01T12:04:35.860001', '54': '2023-09-01T12:04:35.861000', '56': '2023-09-01T12:04:35.862000', '55': '2023-09-01T12:04:35.864000', '58': '2023-09-01T12:04:35.869001', '57': '2023-09-01T12:04:35.871000', '60': '2023-09-01T12:04:35.873000', '59': '2023-09-01T12:04:35.875000', '63': '2023-09-01T12:04:35.875000', '61': '2023-09-01T12:04:35.877001', '65': '2023-09-01T12:04:35.878000', '62': '2023-09-01T12:04:35.880000', '64': '2023-09-01T12:04:35.881000', '67': '2023-09-01T12:04:35.882000', '66': '2023-09-01T12:04:35.882001', '68': '2023-09-01T12:04:35.886000', '69': '2023-09-01T12:04:35.886000', '70': '2023-09-01T12:04:35.888000', '71': '2023-09-01T12:04:35.890000', '72': '2023-09-01T12:04:35.893000', '73': '2023-09-01T12:04:35.897001', '74': '2023-09-01T12:04:35.897001', '75': '2023-09-01T12:04:35.898001', '77': '2023-09-01T12:04:35.902000', '78': '2023-09-01T12:04:35.902000', '80': '2023-09-01T12:04:35.904000', '76': '2023-09-01T12:04:35.905001', '82': '2023-09-01T12:04:35.907000', '79': '2023-09-01T12:04:35.907000', '81': '2023-09-01T12:04:35.908000', '84': '2023-09-01T12:04:35.912000', '83': '2023-09-01T12:04:35.915000', '86': '2023-09-01T12:04:35.916001', '85': '2023-09-01T12:04:35.917000', '87': '2023-09-01T12:04:35.917000', '88': '2023-09-01T12:04:35.921000', '89': '2023-09-01T12:04:35.921000', '90': '2023-09-01T12:04:35.923001', '91': '2023-09-01T12:04:35.925000', '92': '2023-09-01T12:04:35.929000', '94': '2023-09-01T12:04:35.930000', '93': '2023-09-01T12:04:35.931000', '97': '2023-09-01T12:04:35.931001', '96': '2023-09-01T12:04:35.934000', '98': '2023-09-01T12:04:35.934001', '95': '2023-09-01T12:04:35.935000', '99': '2023-09-01T12:04:35.936000', '100': '2023-09-01T12:04:35.938000', '101': '2023-09-01T12:04:35.943000', '103': '2023-09-01T12:04:35.944000', '102': '2023-09-01T12:04:35.947000', '104': '2023-09-01T12:04:35.947001', '105': '2023-09-01T12:04:35.950000', '110': '2023-09-01T12:04:35.952000', '106': '2023-09-01T12:04:35.952000', '108': '2023-09-01T12:04:35.952001', '109': '2023-09-01T12:04:35.952002', '107': '2023-09-01T12:04:35.956000', '111': '2023-09-01T12:04:35.961000', '113': '2023-09-01T12:04:35.961000', '114': '2023-09-01T12:04:35.962000', '112': '2023-09-01T12:04:35.964001', '116': '2023-09-01T12:04:35.967000', '115': '2023-09-01T12:04:35.970001', '120': '2023-09-01T12:04:35.973000', '119': '2023-09-01T12:04:35.973001', '117': '2023-09-01T12:04:35.974000', '121': '2023-09-01T12:04:35.974000', '118': '2023-09-01T12:04:35.974001', '123': '2023-09-01T12:04:35.977001', '122': '2023-09-01T12:04:35.978000', '126': '2023-09-01T12:04:35.982000', '124': '2023-09-01T12:04:35.984000', '125': '2023-09-01T12:04:35.985001', '127': '2023-09-01T12:04:35.986000', '128': '2023-09-01T12:04:35.987001', '130': '2023-09-01T12:04:35.987001', '132': '2023-09-01T12:04:35.988001', '129': '2023-09-01T12:04:35.989000', '131': '2023-09-01T12:04:35.991001', '136': '2023-09-01T12:04:35.995000', '133': '2023-09-01T12:04:35.997000', '139': '2023-09-01T12:04:35.997001', '138': '2023-09-01T12:04:35.997001', '140': '2023-09-01T12:04:35.997001', '135': '2023-09-01T12:04:35.999000', '141': '2023-09-01T12:04:35.999000', '137': '2023-09-01T12:04:36', '134': '2023-09-01T12:04:36.000001', '144': '2023-09-01T12:04:36.006000', '145': '2023-09-01T12:04:36.007000', '143': '2023-09-01T12:04:36.008000', '142': '2023-09-01T12:04:36.008001', '146': '2023-09-01T12:04:36.015000', '148': '2023-09-01T12:04:36.023000', '149': '2023-09-01T12:04:36.024001', '147': '2023-09-01T12:04:36.024001', '150': '2023-09-01T12:04:36.025000', '151': '2023-09-01T12:04:36.027000', '152': '2023-09-01T12:04:36.029001', '154': '2023-09-01T12:04:36.030000', '155': '2023-09-01T12:04:36.032001', '156': '2023-09-01T12:04:36.032001', '157': '2023-09-01T12:04:36.032001', '153': '2023-09-01T12:04:36.033000', '158': '2023-09-01T12:04:36.037000', '159': '2023-09-01T12:04:36.040000', '160': '2023-09-01T12:04:36.040001', '164': '2023-09-01T12:04:36.043000', '161': '2023-09-01T12:04:36.044000', '162': '2023-09-01T12:04:36.044001', '163': '2023-09-01T12:04:36.044001', '165': '2023-09-01T12:04:36.045000', '167': '2023-09-01T12:04:36.048000', '168': '2023-09-01T12:04:36.048000', '166': '2023-09-01T12:04:36.051000', '173': '2023-09-01T12:04:36.054000', '171': '2023-09-01T12:04:36.055000', '172': '2023-09-01T12:04:36.055000', '169': '2023-09-01T12:04:36.057000', '170': '2023-09-01T12:04:36.058000', '174': '2023-09-01T12:04:36.060001', '175': '2023-09-01T12:04:36.061000', '176': '2023-09-01T12:04:36.064001', '177': '2023-09-01T12:04:36.065000', '179': '2023-09-01T12:04:36.066000', '178': '2023-09-01T12:04:36.067001', '181': '2023-09-01T12:04:36.071001', '182': '2023-09-01T12:04:36.071001', '180': '2023-09-01T12:04:36.074001', '184': '2023-09-01T12:04:36.077001', '185': '2023-09-01T12:04:36.080000', '183': '2023-09-01T12:04:36.081000', '186': '2023-09-01T12:04:36.083001', '188': '2023-09-01T12:04:36.085000', '187': '2023-09-01T12:04:36.087000', '189': '2023-09-01T12:04:36.087000', '190': '2023-09-01T12:04:36.090000', '191': '2023-09-01T12:04:36.091000', '192': '2023-09-01T12:04:36.093001', '194': '2023-09-01T12:04:36.096000', '193': '2023-09-01T12:04:36.097000', '196': '2023-09-01T12:04:36.100000', '198': '2023-09-01T12:04:36.102000', '195': '2023-09-01T12:04:36.102000', '197': '2023-09-01T12:04:36.104000', '199': '2023-09-01T12:04:36.105000', '200': '2023-09-01T12:04:36.106000', '201': '2023-09-01T12:04:36.106000', '202': '2023-09-01T12:04:36.114000', '203': '2023-09-01T12:04:36.116000', '206': '2023-09-01T12:04:36.116000', '207': '2023-09-01T12:04:36.117000', '204': '2023-09-01T12:04:36.120001', '209': '2023-09-01T12:04:36.121001', '205': '2023-09-01T12:04:36.122000', '213': '2023-09-01T12:04:36.141000', '216': '2023-09-01T12:04:36.141001', '208': '2023-09-01T12:04:36.149000', '215': '2023-09-01T12:04:36.150000', '212': '2023-09-01T12:04:36.150000', '210': '2023-09-01T12:04:36.154000', '214': '2023-09-01T12:04:36.156000', '219': '2023-09-01T12:04:36.160000', '211': '2023-09-01T12:04:36.160000', '218': '2023-09-01T12:04:36.162001', '220': '2023-09-01T12:04:36.163001', '221': '2023-09-01T12:04:36.164000', '222': '2023-09-01T12:04:36.171000', '223': '2023-09-01T12:04:36.171001', '225': '2023-09-01T12:04:36.173000', '224': '2023-09-01T12:04:36.176001', '226': '2023-09-01T12:04:36.177000', '227': '2023-09-01T12:04:36.177000', '228': '2023-09-01T12:04:36.178001', '229': '2023-09-01T12:04:36.181000', '230': '2023-09-01T12:04:36.184000', '231': '2023-09-01T12:04:36.184000', '232': '2023-09-01T12:04:36.189000', '234': '2023-09-01T12:04:36.190001', '235': '2023-09-01T12:04:36.192000', '233': '2023-09-01T12:04:36.194000', '236': '2023-09-01T12:04:36.194000', '238': '2023-09-01T12:04:36.195001', '237': '2023-09-01T12:04:36.196000', '240': '2023-09-01T12:04:36.198000', '239': '2023-09-01T12:04:36.199001', '243': '2023-09-01T12:04:36.201001', '242': '2023-09-01T12:04:36.203000', '244': '2023-09-01T12:04:36.205000', '245': '2023-09-01T12:04:36.208000', '247': '2023-09-01T12:04:36.208000', '246': '2023-09-01T12:04:36.209001', '248': '2023-09-01T12:04:36.213000', '249': '2023-09-01T12:04:36.216001', '251': '2023-09-01T12:04:36.220000', '250': '2023-09-01T12:04:36.223001', '252': '2023-09-01T12:04:36.226000', '256': '2023-09-01T12:04:36.228000', '255': '2023-09-01T12:04:36.228000', '253': '2023-09-01T12:04:36.228000', '254': '2023-09-01T12:04:36.229000', '257': '2023-09-01T12:04:36.234000', '258': '2023-09-01T12:04:36.235000', '260': '2023-09-01T12:04:36.235000', '259': '2023-09-01T12:04:36.237001', '263': '2023-09-01T12:04:36.238001', '262': '2023-09-01T12:04:36.239000', '264': '2023-09-01T12:04:36.240000', '261': '2023-09-01T12:04:36.241000', '265': '2023-09-01T12:04:36.241000', '269': '2023-09-01T12:04:36.244000', '266': '2023-09-01T12:04:36.245001', '267': '2023-09-01T12:04:36.246000', '268': '2023-09-01T12:04:36.246001', '272': '2023-09-01T12:04:36.247000', '271': '2023-09-01T12:04:36.251000', '270': '2023-09-01T12:04:36.251001', '273': '2023-09-01T12:04:36.255000', '276': '2023-09-01T12:04:36.255000', '274': '2023-09-01T12:04:36.256000', '277': '2023-09-01T12:04:36.260000', '279': '2023-09-01T12:04:36.261000', '278': '2023-09-01T12:04:36.262000', '275': '2023-09-01T12:04:36.262001', '282': '2023-09-01T12:04:36.264000', '283': '2023-09-01T12:04:36.266001', '281': '2023-09-01T12:04:36.266001', '280': '2023-09-01T12:04:36.269000', '285': '2023-09-01T12:04:36.274000', '284': '2023-09-01T12:04:36.278001', '287': '2023-09-01T12:04:36.281000', '288': '2023-09-01T12:04:36.282000', '286': '2023-09-01T12:04:36.284000', '291': '2023-09-01T12:04:36.286000', '289': '2023-09-01T12:04:36.287000', '290': '2023-09-01T12:04:36.287001', '292': '2023-09-01T12:04:36.288000', '293': '2023-09-01T12:04:36.288001', '294': '2023-09-01T12:04:36.292000', '296': '2023-09-01T12:04:36.295000', '299': '2023-09-01T12:04:36.298000', '300': '2023-09-01T12:04:36.299000', '298': '2023-09-01T12:04:36.299000', '301': '2023-09-01T12:04:36.301000', '297': '2023-09-01T12:04:36.301001', '295': '2023-09-01T12:04:36.301002', '302': '2023-09-01T12:04:36.302001', '303': '2023-09-01T12:04:36.308001', '305': '2023-09-01T12:04:36.308001', '304': '2023-09-01T12:04:36.309000', '306': '2023-09-01T12:04:36.310000', '308': '2023-09-01T12:04:36.315001', '307': '2023-09-01T12:04:36.315001', '309': '2023-09-01T12:04:36.315002', '311': '2023-09-01T12:04:36.321000', '312': '2023-09-01T12:04:36.322000', '310': '2023-09-01T12:04:36.322001', '313': '2023-09-01T12:04:36.327000', '314': '2023-09-01T12:04:36.329000', '316': '2023-09-01T12:04:36.329001', '315': '2023-09-01T12:04:36.329001', '317': '2023-09-01T12:04:36.334001', '318': '2023-09-01T12:04:36.335001', '319': '2023-09-01T12:04:36.335001', '320': '2023-09-01T12:04:36.340001', '322': '2023-09-01T12:04:36.341000', '321': '2023-09-01T12:04:36.341001', '324': '2023-09-01T12:04:36.348000', '323': '2023-09-01T12:04:36.348001', '325': '2023-09-01T12:04:36.348002', '326': '2023-09-01T12:04:36.348002', '327': '2023-09-01T12:04:36.353000', '329': '2023-09-01T12:04:36.355000', '328': '2023-09-01T12:04:36.356000', '330': '2023-09-01T12:04:36.360001', '331': '2023-09-01T12:04:36.360001', '332': '2023-09-01T12:04:36.361000', '333': '2023-09-01T12:04:36.367000', '336': '2023-09-01T12:04:36.368001', '335': '2023-09-01T12:04:36.368001', '334': '2023-09-01T12:04:36.369000', '337': '2023-09-01T12:04:36.369000', '338': '2023-09-01T12:04:36.376001', '341': '2023-09-01T12:04:36.377001', '340': '2023-09-01T12:04:36.377001', '339': '2023-09-01T12:04:36.377001', '342': '2023-09-01T12:04:36.378000', '343': '2023-09-01T12:04:36.383000', '344': '2023-09-01T12:04:36.389000', '347': '2023-09-01T12:04:36.389001', '345': '2023-09-01T12:04:36.389002', '346': '2023-09-01T12:04:36.390000', '348': '2023-09-01T12:04:36.395000', '351': '2023-09-01T12:04:36.396001', '349': '2023-09-01T12:04:36.396001', '352': '2023-09-01T12:04:36.396001', '350': '2023-09-01T12:04:36.396002', '353': '2023-09-01T12:04:36.400000', '354': '2023-09-01T12:04:36.405000', '356': '2023-09-01T12:04:36.405001', '355': '2023-09-01T12:04:36.407001', '357': '2023-09-01T12:04:36.407001', '358': '2023-09-01T12:04:36.411001', '359': '2023-09-01T12:04:36.411001', '361': '2023-09-01T12:04:36.412000', '360': '2023-09-01T12:04:36.412001', '362': '2023-09-01T12:04:36.412001', '363': '2023-09-01T12:04:36.419000', '364': '2023-09-01T12:04:36.425001', '365': '2023-09-01T12:04:36.425001', '367': '2023-09-01T12:04:36.426000', '366': '2023-09-01T12:04:36.426001', '368': '2023-09-01T12:04:36.432000', '369': '2023-09-01T12:04:36.432000', '372': '2023-09-01T12:04:36.433000', '370': '2023-09-01T12:04:36.433000', '371': '2023-09-01T12:04:36.433001', '373': '2023-09-01T12:04:36.438000', '374': '2023-09-01T12:04:36.443000', '377': '2023-09-01T12:04:36.444000', '376': '2023-09-01T12:04:36.444001', '375': '2023-09-01T12:04:36.444001', '378': '2023-09-01T12:04:36.450000', '381': '2023-09-01T12:04:36.451000', '382': '2023-09-01T12:04:36.452000', '380': '2023-09-01T12:04:36.452001', '379': '2023-09-01T12:04:36.452001', '383': '2023-09-01T12:04:36.457000', '385': '2023-09-01T12:04:36.464000', '384': '2023-09-01T12:04:36.466001', '386': '2023-09-01T12:04:36.467000', '387': '2023-09-01T12:04:36.467002', '389': '2023-09-01T12:04:36.467002', '390': '2023-09-01T12:04:36.467002', '388': '2023-09-01T12:04:36.468000', '391': '2023-09-01T12:04:36.472000', '392': '2023-09-01T12:04:36.472001', '394': '2023-09-01T12:04:36.476000', '393': '2023-09-01T12:04:36.476000', '395': '2023-09-01T12:04:36.478000', '396': '2023-09-01T12:04:36.478001', '397': '2023-09-01T12:04:36.481000', '398': '2023-09-01T12:04:36.482000', '399': '2023-09-01T12:04:36.482001', '400': '2023-09-01T12:04:36.488000', '403': '2023-09-01T12:04:36.490000', '401': '2023-09-01T12:04:36.490001', '404': '2023-09-01T12:04:36.491000', '402': '2023-09-01T12:04:36.491001', '406': '2023-09-01T12:04:36.494000', '405': '2023-09-01T12:04:36.494001', '407': '2023-09-01T12:04:36.497001', '409': '2023-09-01T12:04:36.498000', '408': '2023-09-01T12:04:36.499000', '410': '2023-09-01T12:04:36.502000', '411': '2023-09-01T12:04:36.503000', '412': '2023-09-01T12:04:36.503001', '413': '2023-09-01T12:04:36.504000', '414': '2023-09-01T12:04:36.504001', '415': '2023-09-01T12:04:36.508000', '416': '2023-09-01T12:04:36.509000', '417': '2023-09-01T12:04:36.510000', '419': '2023-09-01T12:04:36.513000', '418': '2023-09-01T12:04:36.514001', '420': '2023-09-01T12:04:36.518001', '421': '2023-09-01T12:04:36.518001', '423': '2023-09-01T12:04:36.519000', '422': '2023-09-01T12:04:36.519001', '426': '2023-09-01T12:04:36.525001', '425': '2023-09-01T12:04:36.525001', '424': '2023-09-01T12:04:36.525001', '427': '2023-09-01T12:04:36.531000', '428': '2023-09-01T12:04:36.532000', '429': '2023-09-01T12:04:36.532000', '430': '2023-09-01T12:04:36.536000', '431': '2023-09-01T12:04:36.539000', '432': '2023-09-01T12:04:36.540000', '434': '2023-09-01T12:04:36.542000', '435': '2023-09-01T12:04:36.543000', '433': '2023-09-01T12:04:36.543001', '436': '2023-09-01T12:04:36.543001', '437': '2023-09-01T12:04:36.543002', '438': '2023-09-01T12:04:36.545000', '439': '2023-09-01T12:04:36.549001', '440': '2023-09-01T12:04:36.552000', '441': '2023-09-01T12:04:36.553000', '443': '2023-09-01T12:04:36.556000', '442': '2023-09-01T12:04:36.558000', '444': '2023-09-01T12:04:36.558001', '445': '2023-09-01T12:04:36.559000', '446': '2023-09-01T12:04:36.560001', '447': '2023-09-01T12:04:36.561000', '452': '2023-09-01T12:04:36.568000', '448': '2023-09-01T12:04:36.568001', '450': '2023-09-01T12:04:36.569001', '451': '2023-09-01T12:04:36.569001', '449': '2023-09-01T12:04:36.569001', '453': '2023-09-01T12:04:36.569002', '454': '2023-09-01T12:04:36.573000', '455': '2023-09-01T12:04:36.574000', '456': '2023-09-01T12:04:36.574001', '457': '2023-09-01T12:04:36.574001', '458': '2023-09-01T12:04:36.578000', '459': '2023-09-01T12:04:36.581000', '460': '2023-09-01T12:04:36.585001', '461': '2023-09-01T12:04:36.585001', '462': '2023-09-01T12:04:36.586000', '463': '2023-09-01T12:04:36.587000', '464': '2023-09-01T12:04:36.587001', '466': '2023-09-01T12:04:36.590000', '465': '2023-09-01T12:04:36.592000', '467': '2023-09-01T12:04:36.593000', '468': '2023-09-01T12:04:36.593001', '469': '2023-09-01T12:04:36.598000', '470': '2023-09-01T12:04:36.598001', '472': '2023-09-01T12:04:36.605000', '471': '2023-09-01T12:04:36.605001', '473': '2023-09-01T12:04:36.606000', '474': '2023-09-01T12:04:36.606001', '475': '2023-09-01T12:04:36.614000', '476': '2023-09-01T12:04:36.615001', '477': '2023-09-01T12:04:36.621001', '478': '2023-09-01T12:04:36.621001', '481': '2023-09-01T12:04:36.621002', '480': '2023-09-01T12:04:36.622000', '479': '2023-09-01T12:04:36.622000', '482': '2023-09-01T12:04:36.630000', '484': '2023-09-01T12:04:36.631001', '483': '2023-09-01T12:04:36.631001', '485': '2023-09-01T12:04:36.638000', '486': '2023-09-01T12:04:36.638001', '487': '2023-09-01T12:04:36.638001', '488': '2023-09-01T12:04:36.639000', '489': '2023-09-01T12:04:36.642000', '490': '2023-09-01T12:04:36.645001', '491': '2023-09-01T12:04:36.645001', '492': '2023-09-01T12:04:36.650000', '493': '2023-09-01T12:04:36.651000', '494': '2023-09-01T12:04:36.652000', '495': '2023-09-01T12:04:36.655000', '496': '2023-09-01T12:04:36.656001', '498': '2023-09-01T12:04:36.657001', '503': '2023-09-01T12:04:36.676000', '497': '2023-09-01T12:04:36.676000', '505': '2023-09-01T12:04:36.676001', '499': '2023-09-01T12:04:36.677000', '501': '2023-09-01T12:04:36.677000', '500': '2023-09-01T12:04:36.678000', '504': '2023-09-01T12:04:36.678001', '502': '2023-09-01T12:04:36.678001', '506': '2023-09-01T12:04:36.688000', '508': '2023-09-01T12:04:36.689001', '509': '2023-09-01T12:04:36.690000', '507': '2023-09-01T12:04:36.691000', '510': '2023-09-01T12:04:36.692000', '511': '2023-09-01T12:04:36.695000', '512': '2023-09-01T12:04:36.696000', '513': '2023-09-01T12:04:36.697000', '514': '2023-09-01T12:04:36.704000', '515': '2023-09-01T12:04:36.705001', '516': '2023-09-01T12:04:36.706000', '517': '2023-09-01T12:04:36.707000', '518': '2023-09-01T12:04:36.709000', '520': '2023-09-01T12:04:36.710000', '521': '2023-09-01T12:04:36.710001', '519': '2023-09-01T12:04:36.710001', '522': '2023-09-01T12:04:36.715000', '523': '2023-09-01T12:04:36.718000', '524': '2023-09-01T12:04:36.719000', '525': '2023-09-01T12:04:36.722000', '526': '2023-09-01T12:04:36.722001', '527': '2023-09-01T12:04:36.723000', '529': '2023-09-01T12:04:36.726001', '528': '2023-09-01T12:04:36.726001', '530': '2023-09-01T12:04:36.727000', '531': '2023-09-01T12:04:36.727001', '532': '2023-09-01T12:04:36.732000', '534': '2023-09-01T12:04:36.732001', '533': '2023-09-01T12:04:36.732001', '535': '2023-09-01T12:04:36.737000', '536': '2023-09-01T12:04:36.738001', '537': '2023-09-01T12:04:36.739000', '538': '2023-09-01T12:04:36.739001', '539': '2023-09-01T12:04:36.741000', '540': '2023-09-01T12:04:36.743001', '542': '2023-09-01T12:04:36.744001', '543': '2023-09-01T12:04:36.745000', '541': '2023-09-01T12:04:36.745000', '545': '2023-09-01T12:04:36.748001', '547': '2023-09-01T12:04:36.751000', '544': '2023-09-01T12:04:36.752000', '548': '2023-09-01T12:04:36.752001', '546': '2023-09-01T12:04:36.752001', '549': '2023-09-01T12:04:36.754000', '550': '2023-09-01T12:04:36.755000', '551': '2023-09-01T12:04:36.760000', '552': '2023-09-01T12:04:36.763000', '553': '2023-09-01T12:04:36.780000', '555': '2023-09-01T12:04:36.781000', '554': '2023-09-01T12:04:36.781001', '556': '2023-09-01T12:04:36.781001', '558': '2023-09-01T12:04:36.782001', '557': '2023-09-01T12:04:36.782001', '559': '2023-09-01T12:04:36.786000', '560': '2023-09-01T12:04:36.787000', '561': '2023-09-01T12:04:36.792000', '562': '2023-09-01T12:04:36.795000', '563': '2023-09-01T12:04:36.796000', '564': '2023-09-01T12:04:36.797000', '565': '2023-09-01T12:04:36.798001', '566': '2023-09-01T12:04:36.799000', '567': '2023-09-01T12:04:36.800000', '568': '2023-09-01T12:04:36.802000', '569': '2023-09-01T12:04:36.804000', '570': '2023-09-01T12:04:36.804001', '571': '2023-09-01T12:04:36.808001', '572': '2023-09-01T12:04:36.813000', '573': '2023-09-01T12:04:36.813001', '575': '2023-09-01T12:04:36.814000', '574': '2023-09-01T12:04:36.814001', '576': '2023-09-01T12:04:36.815000', '577': '2023-09-01T12:04:36.818000', '578': '2023-09-01T12:04:36.818001', '579': '2023-09-01T12:04:36.819000', '580': '2023-09-01T12:04:36.820000', '581': '2023-09-01T12:04:36.822000', '582': '2023-09-01T12:04:36.824000', '583': '2023-09-01T12:04:36.824001', '584': '2023-09-01T12:04:36.826000', '585': '2023-09-01T12:04:36.828000', '586': '2023-09-01T12:04:36.828000', '587': '2023-09-01T12:04:36.830000', '588': '2023-09-01T12:04:36.834000', '589': '2023-09-01T12:04:36.835001', '590': '2023-09-01T12:04:36.835001', '591': '2023-09-01T12:04:36.836000', '592': '2023-09-01T12:04:36.839000', '593': '2023-09-01T12:04:36.840000', '594': '2023-09-01T12:04:36.840001', '595': '2023-09-01T12:04:36.843000', '596': '2023-09-01T12:04:36.843001', '597': '2023-09-01T12:04:36.844000', '598': '2023-09-01T12:04:36.847000', '599': '2023-09-01T12:04:36.848000', '600': '2023-09-01T12:04:36.848001', '601': '2023-09-01T12:04:36.848001', '602': '2023-09-01T12:04:36.851000', '603': '2023-09-01T12:04:36.852001', '604': '2023-09-01T12:04:36.852001', '605': '2023-09-01T12:04:36.856001', '607': '2023-09-01T12:04:36.857000', '606': '2023-09-01T12:04:36.858000', '608': '2023-09-01T12:04:36.859000', '609': '2023-09-01T12:04:36.860000', '610': '2023-09-01T12:04:36.860001', '611': '2023-09-01T12:04:36.862000', '612': '2023-09-01T12:04:36.866000', '613': '2023-09-01T12:04:36.866001', '616': '2023-09-01T12:04:36.868001', '615': '2023-09-01T12:04:36.868001', '618': '2023-09-01T12:04:36.869000', '617': '2023-09-01T12:04:36.869001', '619': '2023-09-01T12:04:36.873001', '614': '2023-09-01T12:04:36.874000', '620': '2023-09-01T12:04:36.876000', '621': '2023-09-01T12:04:36.877000', '624': '2023-09-01T12:04:36.882000', '622': '2023-09-01T12:04:36.883000', '623': '2023-09-01T12:04:36.883001', '625': '2023-09-01T12:04:36.884000', '626': '2023-09-01T12:04:36.885000', '627': '2023-09-01T12:04:36.886001', '628': '2023-09-01T12:04:36.886001', '629': '2023-09-01T12:04:36.892000', '631': '2023-09-01T12:04:36.893000', '630': '2023-09-01T12:04:36.893001', '633': '2023-09-01T12:04:36.895000', '632': '2023-09-01T12:04:36.895000', '634': '2023-09-01T12:04:36.896000', '636': '2023-09-01T12:04:36.898001', '635': '2023-09-01T12:04:36.898001', '637': '2023-09-01T12:04:36.900000', '638': '2023-09-01T12:04:36.901000', '639': '2023-09-01T12:04:36.904000', '641': '2023-09-01T12:04:36.904001', '640': '2023-09-01T12:04:36.905000', '642': '2023-09-01T12:04:36.906001', '643': '2023-09-01T12:04:36.908000', '644': '2023-09-01T12:04:36.909001', '646': '2023-09-01T12:04:36.910000', '645': '2023-09-01T12:04:36.910001', '649': '2023-09-01T12:04:36.915001', '648': '2023-09-01T12:04:36.915001', '647': '2023-09-01T12:04:36.915001', '650': '2023-09-01T12:04:36.918000', '651': '2023-09-01T12:04:36.919000', '652': '2023-09-01T12:04:36.920000', '653': '2023-09-01T12:04:36.922000', '654': '2023-09-01T12:04:36.923001', '655': '2023-09-01T12:04:36.924000', '657': '2023-09-01T12:04:36.925000', '656': '2023-09-01T12:04:36.926001', '658': '2023-09-01T12:04:36.929001', '660': '2023-09-01T12:04:36.929001', '659': '2023-09-01T12:04:36.929001', '661': '2023-09-01T12:04:36.932000', '662': '2023-09-01T12:04:36.934000', '663': '2023-09-01T12:04:36.935001', '664': '2023-09-01T12:04:36.939000', '667': '2023-09-01T12:04:36.940000', '666': '2023-09-01T12:04:36.941001', '668': '2023-09-01T12:04:36.941001', '665': '2023-09-01T12:04:36.941002', '670': '2023-09-01T12:04:36.944000', '669': '2023-09-01T12:04:36.944000', '672': '2023-09-01T12:04:36.945000', '671': '2023-09-01T12:04:36.945001', '673': '2023-09-01T12:04:36.948000', '674': '2023-09-01T12:04:36.951000', '676': '2023-09-01T12:04:36.952000', '675': '2023-09-01T12:04:36.953001', '677': '2023-09-01T12:04:36.954000', '678': '2023-09-01T12:04:36.955000', '680': '2023-09-01T12:04:36.956000', '679': '2023-09-01T12:04:36.956000', '682': '2023-09-01T12:04:36.957000', '681': '2023-09-01T12:04:36.958001', '683': '2023-09-01T12:04:36.962000', '684': '2023-09-01T12:04:36.963000', '687': '2023-09-01T12:04:36.964000', '685': '2023-09-01T12:04:36.964001', '686': '2023-09-01T12:04:36.966001', '688': '2023-09-01T12:04:36.967000', '689': '2023-09-01T12:04:36.969000', '690': '2023-09-01T12:04:36.969001', '692': '2023-09-01T12:04:36.970000', '691': '2023-09-01T12:04:36.970001', '693': '2023-09-01T12:04:36.974000', '695': '2023-09-01T12:04:36.975000', '694': '2023-09-01T12:04:36.975000', '696': '2023-09-01T12:04:36.977000', '697': '2023-09-01T12:04:36.977001', '699': '2023-09-01T12:04:36.980000', '698': '2023-09-01T12:04:36.980000', '700': '2023-09-01T12:04:36.983000', '701': '2023-09-01T12:04:36.986000', '702': '2023-09-01T12:04:36.986001', '703': '2023-09-01T12:04:36.991000', '705': '2023-09-01T12:04:36.991001', '704': '2023-09-01T12:04:36.992001', '708': '2023-09-01T12:04:36.992001', '706': '2023-09-01T12:04:36.993001', '707': '2023-09-01T12:04:36.993001', '709': '2023-09-01T12:04:36.994000', '710': '2023-09-01T12:04:36.994001', '711': '2023-09-01T12:04:37.001000', '712': '2023-09-01T12:04:37.002000', '714': '2023-09-01T12:04:37.003000', '715': '2023-09-01T12:04:37.004000', '713': '2023-09-01T12:04:37.006001', '716': '2023-09-01T12:04:37.007000', '717': '2023-09-01T12:04:37.007001', '719': '2023-09-01T12:04:37.008000', '718': '2023-09-01T12:04:37.008001', '720': '2023-09-01T12:04:37.010000', '722': '2023-09-01T12:04:37.014000', '721': '2023-09-01T12:04:37.015000', '724': '2023-09-01T12:04:37.015001', '723': '2023-09-01T12:04:37.016000', '725': '2023-09-01T12:04:37.019000', '727': '2023-09-01T12:04:37.019001', '726': '2023-09-01T12:04:37.020000', '728': '2023-09-01T12:04:37.025000', '729': '2023-09-01T12:04:37.026000', '732': '2023-09-01T12:04:37.029000', '730': '2023-09-01T12:04:37.029001', '731': '2023-09-01T12:04:37.029001', '734': '2023-09-01T12:04:37.030001', '735': '2023-09-01T12:04:37.030001', '733': '2023-09-01T12:04:37.031000', '737': '2023-09-01T12:04:37.035001', '736': '2023-09-01T12:04:37.036000', '738': '2023-09-01T12:04:37.040000', '739': '2023-09-01T12:04:37.043000', '741': '2023-09-01T12:04:37.045000', '740': '2023-09-01T12:04:37.045001', '742': '2023-09-01T12:04:37.046000', '743': '2023-09-01T12:04:37.046000', '744': '2023-09-01T12:04:37.046002', '745': '2023-09-01T12:04:37.046002', '746': '2023-09-01T12:04:37.049001', '747': '2023-09-01T12:04:37.051000', '748': '2023-09-01T12:04:37.054000', '750': '2023-09-01T12:04:37.055000', '749': '2023-09-01T12:04:37.056001', '751': '2023-09-01T12:04:37.057001', '753': '2023-09-01T12:04:37.059000', '754': '2023-09-01T12:04:37.059001', '752': '2023-09-01T12:04:37.060000', '755': '2023-09-01T12:04:37.063001', '756': '2023-09-01T12:04:37.064000', '757': '2023-09-01T12:04:37.067000', '759': '2023-09-01T12:04:37.067001', '758': '2023-09-01T12:04:37.068000', '760': '2023-09-01T12:04:37.068001', '761': '2023-09-01T12:04:37.070000', '762': '2023-09-01T12:04:37.072000', '763': '2023-09-01T12:04:37.075000', '765': '2023-09-01T12:04:37.075001', '764': '2023-09-01T12:04:37.075001', '766': '2023-09-01T12:04:37.079000', '767': '2023-09-01T12:04:37.083000', '768': '2023-09-01T12:04:37.089000', '769': '2023-09-01T12:04:37.089001', '770': '2023-09-01T12:04:37.090000', '772': '2023-09-01T12:04:37.090000', '771': '2023-09-01T12:04:37.090001', '774': '2023-09-01T12:04:37.092000', '773': '2023-09-01T12:04:37.097000', '775': '2023-09-01T12:04:37.100000', '776': '2023-09-01T12:04:37.100000', '777': '2023-09-01T12:04:37.101000', '778': '2023-09-01T12:04:37.103000', '780': '2023-09-01T12:04:37.103001', '779': '2023-09-01T12:04:37.106001', '781': '2023-09-01T12:04:37.108000', '782': '2023-09-01T12:04:37.108001', '783': '2023-09-01T12:04:37.113000', '785': '2023-09-01T12:04:37.113001', '786': '2023-09-01T12:04:37.114000', '784': '2023-09-01T12:04:37.114001', '787': '2023-09-01T12:04:37.117001', '790': '2023-09-01T12:04:37.118001', '788': '2023-09-01T12:04:37.118001', '789': '2023-09-01T12:04:37.119000', '791': '2023-09-01T12:04:37.122000', '794': '2023-09-01T12:04:37.127000', '792': '2023-09-01T12:04:37.127001', '795': '2023-09-01T12:04:37.130000', '793': '2023-09-01T12:04:37.130001', '796': '2023-09-01T12:04:37.131000', '797': '2023-09-01T12:04:37.131001', '798': '2023-09-01T12:04:37.135000', '799': '2023-09-01T12:04:37.135000'}
305 -> 304
308 -> 307
312 -> 310
316 -> 315
322 -> 321
324 -> 323
329 -> 328
336 -> 335
335 -> 334
341 -> 340
340 -> 339
347 -> 345
351 -> 349
352 -> 350
356 -> 355
361 -> 360
367 -> 366
372 -> 370
377 -> 376
376 -> 375
382 -> 380
380 -> 379
385 -> 384
390 -> 388
394 -> 393
403 -> 401
404 -> 402
406 -> 405
409 -> 408
419 -> 418
423 -> 422
426 -> 425
425 -> 424
435 -> 433
443 -> 442
452 -> 448
451 -> 449
466 -> 465
472 -> 471
481 -> 480
480 -> 479
484 -> 483
503 -> 497
505 -> 499
501 -> 500
504 -> 502
509 -> 507
521 -> 519
529 -> 528
534 -> 533
543 -> 541
547 -> 544
548 -> 546
555 -> 554
558 -> 557
575 -> 574
607 -> 606
616 -> 615
618 -> 617
619 -> 614
624 -> 622
631 -> 630
633 -> 632
636 -> 635
641 -> 640
646 -> 645
649 -> 648
648 -> 647
657 -> 656
660 -> 659
667 -> 666
668 -> 665
670 -> 669
672 -> 671
676 -> 675
680 -> 679
682 -> 681
687 -> 685
692 -> 691
695 -> 694
699 -> 698
705 -> 704
708 -> 706
715 -> 713
719 -> 718
722 -> 721
724 -> 723
727 -> 726
732 -> 730
735 -> 733
737 -> 736
741 -> 740
750 -> 749
754 -> 752
759 -> 758
765 -> 764
772 -> 771
774 -> 773
780 -> 779
786 -> 784
790 -> 788
794 -> 792
795 -> 793
conflicts counter: 103
